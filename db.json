{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/apollo/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff","path":"font/sourcesanspro.woff","modified":1,"renderable":1},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","path":"font/sourcesanspro.woff2","modified":1,"renderable":1},{"_id":"themes/apollo/source/scss/apollo.scss","path":"scss/apollo.scss","modified":1,"renderable":1},{"_id":"themes/apollo/source/css/apollo.css","path":"css/apollo.css","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"8ec6613b07fa96f5e1ad01577b2683fd1216a558","modified":1493178378000},{"_id":"source/.DS_Store","hash":"f8ac4b5b131028b091e1b9755abd0e314071382c","modified":1493269007000},{"_id":"themes/apollo/.DS_Store","hash":"65c79295fd9f347244c069fbf4f6a739b92fc674","modified":1493272081000},{"_id":"source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1492667591000},{"_id":"themes/apollo/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1493181290000},{"_id":"themes/apollo/README.md","hash":"201c76d030a98578ed5a6ad5c766a7bde91c32d3","modified":1493181290000},{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1493181290000},{"_id":"themes/apollo/_config.yml","hash":"08b81b439882cdb407273cde76946325f1536b73","modified":1493265098000},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1493181290000},{"_id":"themes/apollo/package.json","hash":"eb1e76ec0b7ed6c6c7b2bd32b4f1e1bbe15800ca","modified":1493181290000},{"_id":"source/js/iuunhao.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492667591000},{"_id":"source/_posts/Atom配置（VIM党）.md","hash":"3aa3a4e386fbacc5085e06b308d7ae7efbfec969","modified":1493373169000},{"_id":"source/_posts/ES6知识整理.md","hash":"d053177e0713e131086b0924864b0f75fb75ad15","modified":1493381953000},{"_id":"source/_posts/Git多账号配置.md","hash":"f76d450a18925a692286c11990ad92654deb7f8d","modified":1493356225000},{"_id":"source/_posts/Javascript代码片段（持续更新）.md","hash":"29d7c67b86c5897abe227756d2ef2abda6bbf00c","modified":1493272524000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1493352342000},{"_id":"source/_posts/Javascript概念整理(持续更新).md","hash":"0fc38ed87a145fbf47226efe64aa6dcf3be80d7c","modified":1493352598000},{"_id":"themes/apollo/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1493181290000},{"_id":"themes/apollo/.git/config","hash":"e8486e77527181934f2dda23e50b879ab7641244","modified":1493181290000},{"_id":"source/_posts/Sublime配置.md","hash":"7bda46f89ff7409e049839cdd9dfaa074364437b","modified":1493268689000},{"_id":"source/css/iuunhao.styl","hash":"7cc01f460c6befa6784694037720b185f9e8125f","modified":1493184404000},{"_id":"themes/apollo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1493181283000},{"_id":"themes/apollo/.git/index","hash":"3cefdaadd57e68d3f23ba49973ba3ec8abfabd90","modified":1493271853000},{"_id":"themes/apollo/.git/packed-refs","hash":"5ce6dd541b8ac3b632ca745d093f9406f9645ad4","modified":1493181290000},{"_id":"themes/apollo/doc/doc-zh.md","hash":"d43c1f6bff66426744a2c6f031d19ff09cdeb2d1","modified":1493181290000},{"_id":"themes/apollo/languages/en.yml","hash":"40292f2a48e4e6361132033a47c516cb33127b6c","modified":1493181290000},{"_id":"themes/apollo/doc/doc-en.md","hash":"d6d9756b2085cdd8ee51eb5594427e2abf170e94","modified":1493181290000},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"72547a337a2b559f2d0a0d50d7ccf1f390d41ff7","modified":1493272042000},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1493181290000},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1493181290000},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1493181290000},{"_id":"themes/apollo/source/.DS_Store","hash":"79c92d8494c0772933345bfb5332abbe95bf024f","modified":1493271382000},{"_id":"themes/apollo/source/favicon.png","hash":"b88b848f81ac4dc7bb535d3277fa107b8665b26f","modified":1493271143000},{"_id":"themes/apollo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1493181283000},{"_id":"themes/apollo/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1493181283000},{"_id":"themes/apollo/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1493181283000},{"_id":"themes/apollo/.git/logs/HEAD","hash":"e21c0845536435c375535143aac61846aeff3fee","modified":1493181290000},{"_id":"themes/apollo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1493181283000},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1493181290000},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"cd9447e9b0ad22213e6a17d9a9b948f9f998f921","modified":1493181290000},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"7547b324ffcb6719600c8fad97d34c9893629f35","modified":1493181290000},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"217f8b17054e5079f2d30bb7e2e4e36c0f2161b7","modified":1493181290000},{"_id":"themes/apollo/layout/partial/head.jade","hash":"43d2db73f0247a9a3ed00ecb95b537a872b7201a","modified":1493181290000},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"529c2ec06cfbc3d5b6d66dd320db50dfab5577a6","modified":1493181290000},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1493181290000},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"6bff591ae3d1ff6750f239c4c933ad61f009f36a","modified":1493181290000},{"_id":"themes/apollo/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1493181290000},{"_id":"themes/apollo/source/scss/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1493271414000},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1493181290000},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1493181290000},{"_id":"themes/apollo/.git/objects/pack/pack-502eedd0fbe88aff05a7cbac68e967edc95f37a3.idx","hash":"7eccb150482446d9025ca3d82a053e1f73d3d589","modified":1493181290000},{"_id":"themes/apollo/.git/refs/heads/master","hash":"2fa891d258d70d0b57b2aa29807fc79e04722fc3","modified":1493181290000},{"_id":"themes/apollo/source/css/apollo.css","hash":"bf2d1095ea4168f1341cd0f878d3c430c884fb96","modified":1493272071000},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1493181290000},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"bb0332ec2eaf7a71c76c6d4013de95f6793f4e84","modified":1493271757000},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1493181290000},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1493181290000},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"d4a2e844d692c9eac29a88d3bb344dc933370f1c","modified":1493271216000},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"4c8810d27f018f986803ab95ea7f58d99e6c5dbc","modified":1493271960000},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"fc5dda52cfbb10e27e2471e03f4606fb3d588225","modified":1493181290000},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1493181290000},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"5802be374efe45cce611698b65942a409c77034f","modified":1493271721000},{"_id":"themes/apollo/.git/logs/refs/heads/master","hash":"e21c0845536435c375535143aac61846aeff3fee","modified":1493181290000},{"_id":"themes/apollo/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1493181290000},{"_id":"themes/apollo/.git/logs/refs/remotes/origin/HEAD","hash":"e21c0845536435c375535143aac61846aeff3fee","modified":1493181290000},{"_id":"themes/apollo/.git/objects/pack/pack-502eedd0fbe88aff05a7cbac68e967edc95f37a3.pack","hash":"e417054697ee3903792ad57307cdaf76e9b70696","modified":1493181290000}],"Category":[],"Data":[],"Page":[{"_content":"","source":"js/iuunhao.js","raw":"","date":"2017-04-20T05:53:11.000Z","updated":"2017-04-20T05:53:11.000Z","path":"js/iuunhao.js","layout":"false","title":"","comments":1,"_id":"cj21t2jh30000zdmcmw178lii","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"body\n    background red\n","source":"css/iuunhao.styl","raw":"body\n    background red\n","date":"2017-04-26T05:26:44.000Z","updated":"2017-04-26T05:26:44.000Z","path":"css/iuunhao.css","layout":"false","title":"","comments":1,"_id":"cj21t2jsi0002zdmczvm64xkp","content":"body {\n  background: #f00;\n}\n","site":{"data":{}},"excerpt":"","more":"body {\n  background: #f00;\n}\n"}],"Post":[{"title":"Atom配置（VIM党）","date":"2016-03-26T03:48:40.000Z","_content":"\n为什么说是Vim党呢？首先我是一个深度的Vim用户，自己的电脑上基本上可以兼容Vim的插件都有，所有浏览器，所有编辑器都是Vim的操作方式，当然包括我现在书写的markdown的软件[EME](https://github.com/egoist/eme)也是兼容的Vim的操作。\n\n自从4年前，一次偶尔的机会接触到了Vim这款编辑器，就深深的被吸引了。\n\n从刚开始实用别人的配置文件，直到最后自己用了2年的时间打磨出了自己的配置文件，我曾经用了1个月的时间翻遍了[VimAwesome](http://vimawesome.com/)的所有插件，从当初100+的插件配置到现在插件也就是10+配置文件也从当初3000+行到现在400+行，开始喜欢修改快捷键，喜欢什么都用插件来代替，到现在全部原生快捷键，能用`VimScript`实现的功能都不会去用插件来代替。\n\n也许我们对一个事物的追求到了一定程度的时候，我就回到起点，感觉一切都是最原始的是最好的。\n\n我写这篇文章呢？\n\n不管是vim 还是Gvim 还是spacemacs 他们都做的很好，也许是自己对UI要求过高吧，Atom的界面做的很棒。\n\nsublime VScode 等等的编辑器，虽然也都有vim的插件支持，但是目前我发现的只有atom的这个插件做的是好的，速度也是相当快的。基本可以平移。\n<!--more-->\n这里借用作者的一幅图\n![](https://camo.githubusercontent.com/8d45d7e4100511d56103b8b8b022ce86deb4b9cc/687474703a2f2f692e696d6775722e636f6d2f556d786a6f63442e676966)\n\n快捷键基本也是通用的(space 代替空格)\n\n### 常用快捷键(也可以自定义)\n* SPACE f :显示所有快捷键\n* SPACE f f :显示文件列表\n* SPACE b b :显示当前buffer\n* SAPCE l :移动当前工作区的位置到右侧\n* SAPCE k :移动当前工作区的位置到上侧\n* SAPCE h :移动当前工作区的位置到左侧\n* SAPCE j :移动当前工作区的位置到下侧\n\n\n这篇文章里面的配置，也许不适合所有人，有几个前提如果你经历过这个过程，也许会对你有帮助，否则，此文也许对你没有任何的帮助。\n\n---\n\n## 基本要求\n\n  * 你使用过vim，曾经用过也可以，最起码这些东西对你而言不是问题[Vim基本快捷键](https://vim.rtorr.com/lang/zh_cn/)\n  * 你用过[Spacemacs](http://spacemacs.org/)\n  \n 如果以上两条你都没问题，那么接下来的内容你也许会感兴趣。\n \n## 软件安装\n Atom的安装这里省略。[官网](https://atom.io/)\n \n## 基本插件\n 下载完成先安装一个插件\n [proton-mode](https://atom.io/packages/proton-mode)\n [Github地址](https://github.com/dvcrn/proton-bin)\n \n 安装完成在你的西贡根目录会有个`.proton`的配置文件，Atom的所有配置都需要在这里修改，如果直接在软件内部修改，每次重新启动atom所有的设置都会被重置。\n \n```\n{\n  ;; 层的设置(spacemacs层的概念包含了一系列插件)\n  :layers\n  [\n    :core\n    :tools/git\n    :tools/linter\n    :tools/minimap\n    :lang/javascript\n  ]\n  ;; 自定义添加插件(如果需要安装插件必须在这里添加)\n  :additional-packages\n  [\n    :atom-ternjs\n    :tag\n    :autocomplete-modules\n    :csslint\n    :htmlhint\n    :pigments\n    :atom-beautify\n    :open-in-browser\n    :tree-view-copy-relative-path\n    :pristine-ui\n    :duotone-dark-space-syntax\n    :emmet\n    :docblockr\n    :autocomplete-plus\n    :auto-id-class\n    :glowing-cursor\n    :tree-view-tautoresize\n    :jumpy\n    :stylus\n    :atom-pug\n    :atom-pug\n  ]\n  ;; 禁用插件\n  :disabled-packages [\n    :autoupdate-packages\n    :about\n    :welcome\n    :status-bar\n    :zentabs\n    :file-icons\n    :easy-motion-redux\n    :relative-numbers\n    :encoding-selector\n  ]\n  ;; 编辑器的配置\n  :configuration\n  [\n    [\"editor.fontFamily\" \"Office Code pro\"]\n    [\"editor.fontSize\" 18]\n    [\"editor.preferredLineLength\" \"900\"]\n    [\"editor.tabLength\" 4]\n    [\"editor.tabType\" \"auto\"]\n    [\"editor.atomicSoftTabs\" false]\n    [\"editor.nonWordCharacters\" \"./\\\\()\\\"':,.;<>~!@#$%^&*|+=[]{}`~?\"]\n    [\"core.themes\" [\"pristine-ui\" \"duotone-dark-space-syntax\"]]\n    [\"proton.core.showTabBar\" true]\n    [\"proton.core.relativeLineNumbers\" false]\n    [\"proton.core.inputProvider\" :vim-mode-plus]\n  ]\n  ;; 快捷键设置\n  :keybindings {}\n  :keymaps [{:selector \".tree-view\" :keymap [[\"escape\" \"tree-view:toggle\"]]}\n            {:selector \"atom-text-editor.vim-mode-plus:not(.normal-mode)\" :keymap [[\"f d\" \"vim-mode-plus:activate-normal-mode\"]]}\n  ]\n}\n```\n\n我们只需要备份好这个配置文件，就可以，每次启动atom的时候它都会加载这个配置文件，对插件和配置进行重置。\n\n### 在这里我顺便推荐几个资源：\n* [EME](https://github.com/egoist/eme) mac下编辑markdown很方便，是我目前发现最好用的一款markdown编辑器\n* [VimAwesome](http://vimawesome.com/) 如果你执意用vim的这个网站你必须知道的。vim插件网站\n* [Spacemacs](http://spacemacs.org/) 如果你没有用过spacemacs的建议你去看看。\n* [Vim基本快捷键](https://vim.rtorr.com/lang/zh_cn/) Vim的基本快捷键，多语言的。\n\n\n\n<table>\n    <thead>\n        <tr>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td rowspan=\"2\">fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n\t\t\t<td>fdsfds</td>\n        </tr>\n\t\t <tr>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n\t\t\t<td>fdsfds</td>\n        </tr>\n    </tbody>\n</table>","source":"_posts/Atom配置（VIM党）.md","raw":"---\ntitle: Atom配置（VIM党）\ndate: 2016-03-26 11:48:40\ntags: vim emacs atom spacemacs\n---\n\n为什么说是Vim党呢？首先我是一个深度的Vim用户，自己的电脑上基本上可以兼容Vim的插件都有，所有浏览器，所有编辑器都是Vim的操作方式，当然包括我现在书写的markdown的软件[EME](https://github.com/egoist/eme)也是兼容的Vim的操作。\n\n自从4年前，一次偶尔的机会接触到了Vim这款编辑器，就深深的被吸引了。\n\n从刚开始实用别人的配置文件，直到最后自己用了2年的时间打磨出了自己的配置文件，我曾经用了1个月的时间翻遍了[VimAwesome](http://vimawesome.com/)的所有插件，从当初100+的插件配置到现在插件也就是10+配置文件也从当初3000+行到现在400+行，开始喜欢修改快捷键，喜欢什么都用插件来代替，到现在全部原生快捷键，能用`VimScript`实现的功能都不会去用插件来代替。\n\n也许我们对一个事物的追求到了一定程度的时候，我就回到起点，感觉一切都是最原始的是最好的。\n\n我写这篇文章呢？\n\n不管是vim 还是Gvim 还是spacemacs 他们都做的很好，也许是自己对UI要求过高吧，Atom的界面做的很棒。\n\nsublime VScode 等等的编辑器，虽然也都有vim的插件支持，但是目前我发现的只有atom的这个插件做的是好的，速度也是相当快的。基本可以平移。\n<!--more-->\n这里借用作者的一幅图\n![](https://camo.githubusercontent.com/8d45d7e4100511d56103b8b8b022ce86deb4b9cc/687474703a2f2f692e696d6775722e636f6d2f556d786a6f63442e676966)\n\n快捷键基本也是通用的(space 代替空格)\n\n### 常用快捷键(也可以自定义)\n* SPACE f :显示所有快捷键\n* SPACE f f :显示文件列表\n* SPACE b b :显示当前buffer\n* SAPCE l :移动当前工作区的位置到右侧\n* SAPCE k :移动当前工作区的位置到上侧\n* SAPCE h :移动当前工作区的位置到左侧\n* SAPCE j :移动当前工作区的位置到下侧\n\n\n这篇文章里面的配置，也许不适合所有人，有几个前提如果你经历过这个过程，也许会对你有帮助，否则，此文也许对你没有任何的帮助。\n\n---\n\n## 基本要求\n\n  * 你使用过vim，曾经用过也可以，最起码这些东西对你而言不是问题[Vim基本快捷键](https://vim.rtorr.com/lang/zh_cn/)\n  * 你用过[Spacemacs](http://spacemacs.org/)\n  \n 如果以上两条你都没问题，那么接下来的内容你也许会感兴趣。\n \n## 软件安装\n Atom的安装这里省略。[官网](https://atom.io/)\n \n## 基本插件\n 下载完成先安装一个插件\n [proton-mode](https://atom.io/packages/proton-mode)\n [Github地址](https://github.com/dvcrn/proton-bin)\n \n 安装完成在你的西贡根目录会有个`.proton`的配置文件，Atom的所有配置都需要在这里修改，如果直接在软件内部修改，每次重新启动atom所有的设置都会被重置。\n \n```\n{\n  ;; 层的设置(spacemacs层的概念包含了一系列插件)\n  :layers\n  [\n    :core\n    :tools/git\n    :tools/linter\n    :tools/minimap\n    :lang/javascript\n  ]\n  ;; 自定义添加插件(如果需要安装插件必须在这里添加)\n  :additional-packages\n  [\n    :atom-ternjs\n    :tag\n    :autocomplete-modules\n    :csslint\n    :htmlhint\n    :pigments\n    :atom-beautify\n    :open-in-browser\n    :tree-view-copy-relative-path\n    :pristine-ui\n    :duotone-dark-space-syntax\n    :emmet\n    :docblockr\n    :autocomplete-plus\n    :auto-id-class\n    :glowing-cursor\n    :tree-view-tautoresize\n    :jumpy\n    :stylus\n    :atom-pug\n    :atom-pug\n  ]\n  ;; 禁用插件\n  :disabled-packages [\n    :autoupdate-packages\n    :about\n    :welcome\n    :status-bar\n    :zentabs\n    :file-icons\n    :easy-motion-redux\n    :relative-numbers\n    :encoding-selector\n  ]\n  ;; 编辑器的配置\n  :configuration\n  [\n    [\"editor.fontFamily\" \"Office Code pro\"]\n    [\"editor.fontSize\" 18]\n    [\"editor.preferredLineLength\" \"900\"]\n    [\"editor.tabLength\" 4]\n    [\"editor.tabType\" \"auto\"]\n    [\"editor.atomicSoftTabs\" false]\n    [\"editor.nonWordCharacters\" \"./\\\\()\\\"':,.;<>~!@#$%^&*|+=[]{}`~?\"]\n    [\"core.themes\" [\"pristine-ui\" \"duotone-dark-space-syntax\"]]\n    [\"proton.core.showTabBar\" true]\n    [\"proton.core.relativeLineNumbers\" false]\n    [\"proton.core.inputProvider\" :vim-mode-plus]\n  ]\n  ;; 快捷键设置\n  :keybindings {}\n  :keymaps [{:selector \".tree-view\" :keymap [[\"escape\" \"tree-view:toggle\"]]}\n            {:selector \"atom-text-editor.vim-mode-plus:not(.normal-mode)\" :keymap [[\"f d\" \"vim-mode-plus:activate-normal-mode\"]]}\n  ]\n}\n```\n\n我们只需要备份好这个配置文件，就可以，每次启动atom的时候它都会加载这个配置文件，对插件和配置进行重置。\n\n### 在这里我顺便推荐几个资源：\n* [EME](https://github.com/egoist/eme) mac下编辑markdown很方便，是我目前发现最好用的一款markdown编辑器\n* [VimAwesome](http://vimawesome.com/) 如果你执意用vim的这个网站你必须知道的。vim插件网站\n* [Spacemacs](http://spacemacs.org/) 如果你没有用过spacemacs的建议你去看看。\n* [Vim基本快捷键](https://vim.rtorr.com/lang/zh_cn/) Vim的基本快捷键，多语言的。\n\n\n\n<table>\n    <thead>\n        <tr>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n            <td>a</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td rowspan=\"2\">fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n\t\t\t<td>fdsfds</td>\n        </tr>\n\t\t <tr>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n            <td>fdsfds</td>\n\t\t\t<td>fdsfds</td>\n        </tr>\n    </tbody>\n</table>","slug":"Atom配置（VIM党）","published":1,"updated":"2017-04-28T09:52:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21t2jse0001zdmcbbdlwaqa","content":"<p>为什么说是Vim党呢？首先我是一个深度的Vim用户，自己的电脑上基本上可以兼容Vim的插件都有，所有浏览器，所有编辑器都是Vim的操作方式，当然包括我现在书写的markdown的软件<a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"external\">EME</a>也是兼容的Vim的操作。</p>\n<p>自从4年前，一次偶尔的机会接触到了Vim这款编辑器，就深深的被吸引了。</p>\n<p>从刚开始实用别人的配置文件，直到最后自己用了2年的时间打磨出了自己的配置文件，我曾经用了1个月的时间翻遍了<a href=\"http://vimawesome.com/\" target=\"_blank\" rel=\"external\">VimAwesome</a>的所有插件，从当初100+的插件配置到现在插件也就是10+配置文件也从当初3000+行到现在400+行，开始喜欢修改快捷键，喜欢什么都用插件来代替，到现在全部原生快捷键，能用<code>VimScript</code>实现的功能都不会去用插件来代替。</p>\n<p>也许我们对一个事物的追求到了一定程度的时候，我就回到起点，感觉一切都是最原始的是最好的。</p>\n<p>我写这篇文章呢？</p>\n<p>不管是vim 还是Gvim 还是spacemacs 他们都做的很好，也许是自己对UI要求过高吧，Atom的界面做的很棒。</p>\n<p>sublime VScode 等等的编辑器，虽然也都有vim的插件支持，但是目前我发现的只有atom的这个插件做的是好的，速度也是相当快的。基本可以平移。<br><a id=\"more\"></a><br>这里借用作者的一幅图<br><img src=\"https://camo.githubusercontent.com/8d45d7e4100511d56103b8b8b022ce86deb4b9cc/687474703a2f2f692e696d6775722e636f6d2f556d786a6f63442e676966\" alt=\"\"></p>\n<p>快捷键基本也是通用的(space 代替空格)</p>\n<h3 id=\"常用快捷键-也可以自定义\"><a href=\"#常用快捷键-也可以自定义\" class=\"headerlink\" title=\"常用快捷键(也可以自定义)\"></a>常用快捷键(也可以自定义)</h3><ul>\n<li>SPACE f :显示所有快捷键</li>\n<li>SPACE f f :显示文件列表</li>\n<li>SPACE b b :显示当前buffer</li>\n<li>SAPCE l :移动当前工作区的位置到右侧</li>\n<li>SAPCE k :移动当前工作区的位置到上侧</li>\n<li>SAPCE h :移动当前工作区的位置到左侧</li>\n<li>SAPCE j :移动当前工作区的位置到下侧</li>\n</ul>\n<p>这篇文章里面的配置，也许不适合所有人，有几个前提如果你经历过这个过程，也许会对你有帮助，否则，此文也许对你没有任何的帮助。</p>\n<hr>\n<h2 id=\"基本要求\"><a href=\"#基本要求\" class=\"headerlink\" title=\"基本要求\"></a>基本要求</h2><ul>\n<li>你使用过vim，曾经用过也可以，最起码这些东西对你而言不是问题<a href=\"https://vim.rtorr.com/lang/zh_cn/\" target=\"_blank\" rel=\"external\">Vim基本快捷键</a></li>\n<li><p>你用过<a href=\"http://spacemacs.org/\" target=\"_blank\" rel=\"external\">Spacemacs</a></p>\n<p>如果以上两条你都没问题，那么接下来的内容你也许会感兴趣。</p>\n</li>\n</ul>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><p> Atom的安装这里省略。<a href=\"https://atom.io/\" target=\"_blank\" rel=\"external\">官网</a></p>\n<h2 id=\"基本插件\"><a href=\"#基本插件\" class=\"headerlink\" title=\"基本插件\"></a>基本插件</h2><p> 下载完成先安装一个插件<br> <a href=\"https://atom.io/packages/proton-mode\" target=\"_blank\" rel=\"external\">proton-mode</a><br> <a href=\"https://github.com/dvcrn/proton-bin\" target=\"_blank\" rel=\"external\">Github地址</a></p>\n<p> 安装完成在你的西贡根目录会有个<code>.proton</code>的配置文件，Atom的所有配置都需要在这里修改，如果直接在软件内部修改，每次重新启动atom所有的设置都会被重置。</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  ;; 层的设置(spacemacs层的概念包含了一系列插件)</div><div class=\"line\">  <span class=\"symbol\">:layers</span></div><div class=\"line\">  [</div><div class=\"line\">    <span class=\"symbol\">:core</span></div><div class=\"line\">    <span class=\"symbol\">:tools/git</span></div><div class=\"line\">    <span class=\"symbol\">:tools/linter</span></div><div class=\"line\">    <span class=\"symbol\">:tools/minimap</span></div><div class=\"line\">    <span class=\"symbol\">:lang/javascript</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 自定义添加插件(如果需要安装插件必须在这里添加)</div><div class=\"line\">  <span class=\"symbol\">:additional-packages</span></div><div class=\"line\">  [</div><div class=\"line\">    <span class=\"symbol\">:atom-ternjs</span></div><div class=\"line\">    <span class=\"symbol\">:tag</span></div><div class=\"line\">    <span class=\"symbol\">:autocomplete-modules</span></div><div class=\"line\">    <span class=\"symbol\">:csslint</span></div><div class=\"line\">    <span class=\"symbol\">:htmlhint</span></div><div class=\"line\">    <span class=\"symbol\">:pigments</span></div><div class=\"line\">    <span class=\"symbol\">:atom-beautify</span></div><div class=\"line\">    <span class=\"symbol\">:open-in-browser</span></div><div class=\"line\">    <span class=\"symbol\">:tree-view-copy-relative-path</span></div><div class=\"line\">    <span class=\"symbol\">:pristine-ui</span></div><div class=\"line\">    <span class=\"symbol\">:duotone-dark-space-syntax</span></div><div class=\"line\">    <span class=\"symbol\">:emmet</span></div><div class=\"line\">    <span class=\"symbol\">:docblockr</span></div><div class=\"line\">    <span class=\"symbol\">:autocomplete-plus</span></div><div class=\"line\">    <span class=\"symbol\">:auto-id-class</span></div><div class=\"line\">    <span class=\"symbol\">:glowing-cursor</span></div><div class=\"line\">    <span class=\"symbol\">:tree-view-tautoresize</span></div><div class=\"line\">    <span class=\"symbol\">:jumpy</span></div><div class=\"line\">    <span class=\"symbol\">:stylus</span></div><div class=\"line\">    <span class=\"symbol\">:atom-pug</span></div><div class=\"line\">    <span class=\"symbol\">:atom-pug</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 禁用插件</div><div class=\"line\">  <span class=\"symbol\">:disabled-packages</span> [</div><div class=\"line\">    <span class=\"symbol\">:autoupdate-packages</span></div><div class=\"line\">    <span class=\"symbol\">:about</span></div><div class=\"line\">    <span class=\"symbol\">:welcome</span></div><div class=\"line\">    <span class=\"symbol\">:status-bar</span></div><div class=\"line\">    <span class=\"symbol\">:zentabs</span></div><div class=\"line\">    <span class=\"symbol\">:file-icons</span></div><div class=\"line\">    <span class=\"symbol\">:easy-motion-redux</span></div><div class=\"line\">    <span class=\"symbol\">:relative-numbers</span></div><div class=\"line\">    <span class=\"symbol\">:encoding-selector</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 编辑器的配置</div><div class=\"line\">  <span class=\"symbol\">:configuration</span></div><div class=\"line\">  [</div><div class=\"line\">    [<span class=\"string\">\"editor.fontFamily\"</span> <span class=\"string\">\"Office Code pro\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.fontSize\"</span> <span class=\"number\">18</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.preferredLineLength\"</span> <span class=\"string\">\"900\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.tabLength\"</span> <span class=\"number\">4</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.tabType\"</span> <span class=\"string\">\"auto\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.atomicSoftTabs\"</span> <span class=\"keyword\">false</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.nonWordCharacters\"</span> <span class=\"string\">\"./\\\\()\\\"':,.;&lt;&gt;~!@#$%^&amp;*|+=[]&#123;&#125;`~?\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"core.themes\"</span> [<span class=\"string\">\"pristine-ui\"</span> <span class=\"string\">\"duotone-dark-space-syntax\"</span>]]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.showTabBar\"</span> <span class=\"keyword\">true</span>]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.relativeLineNumbers\"</span> <span class=\"keyword\">false</span>]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.inputProvider\"</span> <span class=\"symbol\">:vim-mode-plus</span>]</div><div class=\"line\">  ]</div><div class=\"line\">  ;; 快捷键设置</div><div class=\"line\">  <span class=\"symbol\">:keybindings</span> &#123;&#125;</div><div class=\"line\">  <span class=\"symbol\">:keymaps</span> [&#123;<span class=\"symbol\">:selector</span> <span class=\"string\">\".tree-view\"</span> <span class=\"symbol\">:keymap</span> [[<span class=\"string\">\"escape\"</span> <span class=\"string\">\"tree-view:toggle\"</span>]]&#125;</div><div class=\"line\">            &#123;<span class=\"symbol\">:selector</span> <span class=\"string\">\"atom-text-editor.vim-mode-plus:not(.normal-mode)\"</span> <span class=\"symbol\">:keymap</span> [[<span class=\"string\">\"f d\"</span> <span class=\"string\">\"vim-mode-plus:activate-normal-mode\"</span>]]&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们只需要备份好这个配置文件，就可以，每次启动atom的时候它都会加载这个配置文件，对插件和配置进行重置。</p>\n<h3 id=\"在这里我顺便推荐几个资源：\"><a href=\"#在这里我顺便推荐几个资源：\" class=\"headerlink\" title=\"在这里我顺便推荐几个资源：\"></a>在这里我顺便推荐几个资源：</h3><ul>\n<li><a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"external\">EME</a> mac下编辑markdown很方便，是我目前发现最好用的一款markdown编辑器</li>\n<li><a href=\"http://vimawesome.com/\" target=\"_blank\" rel=\"external\">VimAwesome</a> 如果你执意用vim的这个网站你必须知道的。vim插件网站</li>\n<li><a href=\"http://spacemacs.org/\" target=\"_blank\" rel=\"external\">Spacemacs</a> 如果你没有用过spacemacs的建议你去看看。</li>\n<li><a href=\"https://vim.rtorr.com/lang/zh_cn/\" target=\"_blank\" rel=\"external\">Vim基本快捷键</a> Vim的基本快捷键，多语言的。</li>\n</ul>\n<table><br>    <thead><br>        <tr><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>        </tr><br>    </thead><br>    <tbody><br>        <tr><br>            <td rowspan=\"2\">fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>        </tr><br>         <tr><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>        </tr><br>    </tbody><br></table>","site":{"data":{}},"excerpt":"<p>为什么说是Vim党呢？首先我是一个深度的Vim用户，自己的电脑上基本上可以兼容Vim的插件都有，所有浏览器，所有编辑器都是Vim的操作方式，当然包括我现在书写的markdown的软件<a href=\"https://github.com/egoist/eme\">EME</a>也是兼容的Vim的操作。</p>\n<p>自从4年前，一次偶尔的机会接触到了Vim这款编辑器，就深深的被吸引了。</p>\n<p>从刚开始实用别人的配置文件，直到最后自己用了2年的时间打磨出了自己的配置文件，我曾经用了1个月的时间翻遍了<a href=\"http://vimawesome.com/\">VimAwesome</a>的所有插件，从当初100+的插件配置到现在插件也就是10+配置文件也从当初3000+行到现在400+行，开始喜欢修改快捷键，喜欢什么都用插件来代替，到现在全部原生快捷键，能用<code>VimScript</code>实现的功能都不会去用插件来代替。</p>\n<p>也许我们对一个事物的追求到了一定程度的时候，我就回到起点，感觉一切都是最原始的是最好的。</p>\n<p>我写这篇文章呢？</p>\n<p>不管是vim 还是Gvim 还是spacemacs 他们都做的很好，也许是自己对UI要求过高吧，Atom的界面做的很棒。</p>\n<p>sublime VScode 等等的编辑器，虽然也都有vim的插件支持，但是目前我发现的只有atom的这个插件做的是好的，速度也是相当快的。基本可以平移。<br>","more":"<br>这里借用作者的一幅图<br><img src=\"https://camo.githubusercontent.com/8d45d7e4100511d56103b8b8b022ce86deb4b9cc/687474703a2f2f692e696d6775722e636f6d2f556d786a6f63442e676966\" alt=\"\"></p>\n<p>快捷键基本也是通用的(space 代替空格)</p>\n<h3 id=\"常用快捷键-也可以自定义\"><a href=\"#常用快捷键-也可以自定义\" class=\"headerlink\" title=\"常用快捷键(也可以自定义)\"></a>常用快捷键(也可以自定义)</h3><ul>\n<li>SPACE f :显示所有快捷键</li>\n<li>SPACE f f :显示文件列表</li>\n<li>SPACE b b :显示当前buffer</li>\n<li>SAPCE l :移动当前工作区的位置到右侧</li>\n<li>SAPCE k :移动当前工作区的位置到上侧</li>\n<li>SAPCE h :移动当前工作区的位置到左侧</li>\n<li>SAPCE j :移动当前工作区的位置到下侧</li>\n</ul>\n<p>这篇文章里面的配置，也许不适合所有人，有几个前提如果你经历过这个过程，也许会对你有帮助，否则，此文也许对你没有任何的帮助。</p>\n<hr>\n<h2 id=\"基本要求\"><a href=\"#基本要求\" class=\"headerlink\" title=\"基本要求\"></a>基本要求</h2><ul>\n<li>你使用过vim，曾经用过也可以，最起码这些东西对你而言不是问题<a href=\"https://vim.rtorr.com/lang/zh_cn/\">Vim基本快捷键</a></li>\n<li><p>你用过<a href=\"http://spacemacs.org/\">Spacemacs</a></p>\n<p>如果以上两条你都没问题，那么接下来的内容你也许会感兴趣。</p>\n</li>\n</ul>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><p> Atom的安装这里省略。<a href=\"https://atom.io/\">官网</a></p>\n<h2 id=\"基本插件\"><a href=\"#基本插件\" class=\"headerlink\" title=\"基本插件\"></a>基本插件</h2><p> 下载完成先安装一个插件<br> <a href=\"https://atom.io/packages/proton-mode\">proton-mode</a><br> <a href=\"https://github.com/dvcrn/proton-bin\">Github地址</a></p>\n<p> 安装完成在你的西贡根目录会有个<code>.proton</code>的配置文件，Atom的所有配置都需要在这里修改，如果直接在软件内部修改，每次重新启动atom所有的设置都会被重置。</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  ;; 层的设置(spacemacs层的概念包含了一系列插件)</div><div class=\"line\">  <span class=\"symbol\">:layers</span></div><div class=\"line\">  [</div><div class=\"line\">    <span class=\"symbol\">:core</span></div><div class=\"line\">    <span class=\"symbol\">:tools/git</span></div><div class=\"line\">    <span class=\"symbol\">:tools/linter</span></div><div class=\"line\">    <span class=\"symbol\">:tools/minimap</span></div><div class=\"line\">    <span class=\"symbol\">:lang/javascript</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 自定义添加插件(如果需要安装插件必须在这里添加)</div><div class=\"line\">  <span class=\"symbol\">:additional-packages</span></div><div class=\"line\">  [</div><div class=\"line\">    <span class=\"symbol\">:atom-ternjs</span></div><div class=\"line\">    <span class=\"symbol\">:tag</span></div><div class=\"line\">    <span class=\"symbol\">:autocomplete-modules</span></div><div class=\"line\">    <span class=\"symbol\">:csslint</span></div><div class=\"line\">    <span class=\"symbol\">:htmlhint</span></div><div class=\"line\">    <span class=\"symbol\">:pigments</span></div><div class=\"line\">    <span class=\"symbol\">:atom-beautify</span></div><div class=\"line\">    <span class=\"symbol\">:open-in-browser</span></div><div class=\"line\">    <span class=\"symbol\">:tree-view-copy-relative-path</span></div><div class=\"line\">    <span class=\"symbol\">:pristine-ui</span></div><div class=\"line\">    <span class=\"symbol\">:duotone-dark-space-syntax</span></div><div class=\"line\">    <span class=\"symbol\">:emmet</span></div><div class=\"line\">    <span class=\"symbol\">:docblockr</span></div><div class=\"line\">    <span class=\"symbol\">:autocomplete-plus</span></div><div class=\"line\">    <span class=\"symbol\">:auto-id-class</span></div><div class=\"line\">    <span class=\"symbol\">:glowing-cursor</span></div><div class=\"line\">    <span class=\"symbol\">:tree-view-tautoresize</span></div><div class=\"line\">    <span class=\"symbol\">:jumpy</span></div><div class=\"line\">    <span class=\"symbol\">:stylus</span></div><div class=\"line\">    <span class=\"symbol\">:atom-pug</span></div><div class=\"line\">    <span class=\"symbol\">:atom-pug</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 禁用插件</div><div class=\"line\">  <span class=\"symbol\">:disabled-packages</span> [</div><div class=\"line\">    <span class=\"symbol\">:autoupdate-packages</span></div><div class=\"line\">    <span class=\"symbol\">:about</span></div><div class=\"line\">    <span class=\"symbol\">:welcome</span></div><div class=\"line\">    <span class=\"symbol\">:status-bar</span></div><div class=\"line\">    <span class=\"symbol\">:zentabs</span></div><div class=\"line\">    <span class=\"symbol\">:file-icons</span></div><div class=\"line\">    <span class=\"symbol\">:easy-motion-redux</span></div><div class=\"line\">    <span class=\"symbol\">:relative-numbers</span></div><div class=\"line\">    <span class=\"symbol\">:encoding-selector</span></div><div class=\"line\">  ]</div><div class=\"line\">  ;; 编辑器的配置</div><div class=\"line\">  <span class=\"symbol\">:configuration</span></div><div class=\"line\">  [</div><div class=\"line\">    [<span class=\"string\">\"editor.fontFamily\"</span> <span class=\"string\">\"Office Code pro\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.fontSize\"</span> <span class=\"number\">18</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.preferredLineLength\"</span> <span class=\"string\">\"900\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.tabLength\"</span> <span class=\"number\">4</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.tabType\"</span> <span class=\"string\">\"auto\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.atomicSoftTabs\"</span> <span class=\"keyword\">false</span>]</div><div class=\"line\">    [<span class=\"string\">\"editor.nonWordCharacters\"</span> <span class=\"string\">\"./\\\\()\\\"':,.;&lt;&gt;~!@#$%^&amp;*|+=[]&#123;&#125;`~?\"</span>]</div><div class=\"line\">    [<span class=\"string\">\"core.themes\"</span> [<span class=\"string\">\"pristine-ui\"</span> <span class=\"string\">\"duotone-dark-space-syntax\"</span>]]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.showTabBar\"</span> <span class=\"keyword\">true</span>]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.relativeLineNumbers\"</span> <span class=\"keyword\">false</span>]</div><div class=\"line\">    [<span class=\"string\">\"proton.core.inputProvider\"</span> <span class=\"symbol\">:vim-mode-plus</span>]</div><div class=\"line\">  ]</div><div class=\"line\">  ;; 快捷键设置</div><div class=\"line\">  <span class=\"symbol\">:keybindings</span> &#123;&#125;</div><div class=\"line\">  <span class=\"symbol\">:keymaps</span> [&#123;<span class=\"symbol\">:selector</span> <span class=\"string\">\".tree-view\"</span> <span class=\"symbol\">:keymap</span> [[<span class=\"string\">\"escape\"</span> <span class=\"string\">\"tree-view:toggle\"</span>]]&#125;</div><div class=\"line\">            &#123;<span class=\"symbol\">:selector</span> <span class=\"string\">\"atom-text-editor.vim-mode-plus:not(.normal-mode)\"</span> <span class=\"symbol\">:keymap</span> [[<span class=\"string\">\"f d\"</span> <span class=\"string\">\"vim-mode-plus:activate-normal-mode\"</span>]]&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们只需要备份好这个配置文件，就可以，每次启动atom的时候它都会加载这个配置文件，对插件和配置进行重置。</p>\n<h3 id=\"在这里我顺便推荐几个资源：\"><a href=\"#在这里我顺便推荐几个资源：\" class=\"headerlink\" title=\"在这里我顺便推荐几个资源：\"></a>在这里我顺便推荐几个资源：</h3><ul>\n<li><a href=\"https://github.com/egoist/eme\">EME</a> mac下编辑markdown很方便，是我目前发现最好用的一款markdown编辑器</li>\n<li><a href=\"http://vimawesome.com/\">VimAwesome</a> 如果你执意用vim的这个网站你必须知道的。vim插件网站</li>\n<li><a href=\"http://spacemacs.org/\">Spacemacs</a> 如果你没有用过spacemacs的建议你去看看。</li>\n<li><a href=\"https://vim.rtorr.com/lang/zh_cn/\">Vim基本快捷键</a> Vim的基本快捷键，多语言的。</li>\n</ul>\n<table><br>    <thead><br>        <tr><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>            <td>a</td><br>        </tr><br>    </thead><br>    <tbody><br>        <tr><br>            <td rowspan=\"2\">fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>        </tr><br>         <tr><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>            <td>fdsfds</td><br>        </tr><br>    </tbody><br></table>"},{"title":"ES6知识整理","date":"2017-04-28T12:10:04.000Z","_content":"\n\nES6默认开始严格模式`'use strict'`\n块级zuo'yong'yu\n\n## let和const\n\n* `let、const`都是在块作用域内有效\n* 不能重复声明同名变量及常量\n* `const`基本类型的值不能修改，但引用类型的常量可以修改\n* `const`声明时必须赋值\n\t```js\n    const obj = {\n        a: 1\n    }\n    obj.a = 2; // 2\n    ```\n## 解构赋值\n```js\n // 数组解构赋值\n{\n    let a, b, c;\n    [a, b, c] = [1, 2, 3];\n    console.log(a, b, c) //1 2 3\n}\n\n{\n    let a, b, c;\n    [a, b] = [1, 2, 3];\n    console.log(a, b, c) //1 2 undefined\n}\n\n{\n    let a, b, c;\n    [a, b, c=10] = [1, 2, 3];\n    console.log(a, b, c) //1 2 10\n}\n\n{\n    let a = 1;\n    let b = 2;\n    [a, b] = [b, a];\n    console.log(a, b) //2 1\n}\n\n{\n    let a, b, c;\n    [a, b, ...c] = [1, 2, 3, 4, 5]\n    console.log(a, b, c) //1 2 [3, 5]\n}\n\n{\n    function f() {\n        return [1, 2, 3];\n    }\n    let a, b;\n    [a,...a] = f();\n    console.log(a) //1 [2, 3]\n}\n\n // 对象解构赋值\n{\n    let a, b;\n    {a,b} = {a:1, b: 2};\n    console.log(a, b) //1 2\n}\n\n{\n   let o = {\n        a: 12,\n        b: 345\n   };\n   let {a, b} = o;\n   console.log(a, b) //12 345\n}\n\n{\n   let o = {\n        a: 12,\n        b: 345\n   };\n   let {a = 100, b} = o;\n   console.log(a, b) //100 345\n}\n\n{\n    let data = {\n        type: 'a',\n        test: [{\n            type: 'b'\n        }]\n    };\n    lef {\n        type: esType,\n        test:[\n            type: cnType\n        ]\n    } = data;\n    console.log(esType, cnType) //'a' 'b'\n}\n\n\n```\n\n## 正则扩展\n\n* 如果第一个参数是`/xyz/ig`形式，第二个参数会覆盖前者的flags\n```js\nlet reg1 = new new RegExp(/xyz/ig, 'i');\nconsole.log(reg1.flags) // i\n```\n\n* `y`与`g`修饰符的区别\n\t* `g`修饰符会在多次调用，匹配剩下的内容是否包含正则内容`（没有位置限制）`\n\t* `y`修饰符在多次调用，必须要求从`剩余的内容的第一位`成功`才能继续`\n* `u`修饰符\n\t*  如果处理的字符里面有大于两个字节的字符\n\t*  修证`.`可以匹配任意字符的概念\n\t*  `.`只能匹配`小于两个字节长度`的字符\n* `s`修饰符`（提案）`\n\t*  匹配换行  \n\n## 字符串扩展\n\n* 大于两个字节的字符使用`\\u{20BB7}`表示\n","source":"_posts/ES6知识整理.md","raw":"---\ntitle: ES6知识整理\ndate: 2017-04-28 20:10:04\ntags:\n---\n\n\nES6默认开始严格模式`'use strict'`\n块级zuo'yong'yu\n\n## let和const\n\n* `let、const`都是在块作用域内有效\n* 不能重复声明同名变量及常量\n* `const`基本类型的值不能修改，但引用类型的常量可以修改\n* `const`声明时必须赋值\n\t```js\n    const obj = {\n        a: 1\n    }\n    obj.a = 2; // 2\n    ```\n## 解构赋值\n```js\n // 数组解构赋值\n{\n    let a, b, c;\n    [a, b, c] = [1, 2, 3];\n    console.log(a, b, c) //1 2 3\n}\n\n{\n    let a, b, c;\n    [a, b] = [1, 2, 3];\n    console.log(a, b, c) //1 2 undefined\n}\n\n{\n    let a, b, c;\n    [a, b, c=10] = [1, 2, 3];\n    console.log(a, b, c) //1 2 10\n}\n\n{\n    let a = 1;\n    let b = 2;\n    [a, b] = [b, a];\n    console.log(a, b) //2 1\n}\n\n{\n    let a, b, c;\n    [a, b, ...c] = [1, 2, 3, 4, 5]\n    console.log(a, b, c) //1 2 [3, 5]\n}\n\n{\n    function f() {\n        return [1, 2, 3];\n    }\n    let a, b;\n    [a,...a] = f();\n    console.log(a) //1 [2, 3]\n}\n\n // 对象解构赋值\n{\n    let a, b;\n    {a,b} = {a:1, b: 2};\n    console.log(a, b) //1 2\n}\n\n{\n   let o = {\n        a: 12,\n        b: 345\n   };\n   let {a, b} = o;\n   console.log(a, b) //12 345\n}\n\n{\n   let o = {\n        a: 12,\n        b: 345\n   };\n   let {a = 100, b} = o;\n   console.log(a, b) //100 345\n}\n\n{\n    let data = {\n        type: 'a',\n        test: [{\n            type: 'b'\n        }]\n    };\n    lef {\n        type: esType,\n        test:[\n            type: cnType\n        ]\n    } = data;\n    console.log(esType, cnType) //'a' 'b'\n}\n\n\n```\n\n## 正则扩展\n\n* 如果第一个参数是`/xyz/ig`形式，第二个参数会覆盖前者的flags\n```js\nlet reg1 = new new RegExp(/xyz/ig, 'i');\nconsole.log(reg1.flags) // i\n```\n\n* `y`与`g`修饰符的区别\n\t* `g`修饰符会在多次调用，匹配剩下的内容是否包含正则内容`（没有位置限制）`\n\t* `y`修饰符在多次调用，必须要求从`剩余的内容的第一位`成功`才能继续`\n* `u`修饰符\n\t*  如果处理的字符里面有大于两个字节的字符\n\t*  修证`.`可以匹配任意字符的概念\n\t*  `.`只能匹配`小于两个字节长度`的字符\n* `s`修饰符`（提案）`\n\t*  匹配换行  \n\n## 字符串扩展\n\n* 大于两个字节的字符使用`\\u{20BB7}`表示\n","slug":"ES6知识整理","published":1,"updated":"2017-04-28T13:23:52.000Z","_id":"cj21t2jsm0003zdmc9bewwh4o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ES6默认开始严格模式<code>&#39;use strict&#39;</code><br>块级zuo’yong’yu</p>\n<h2 id=\"let和const\"><a href=\"#let和const\" class=\"headerlink\" title=\"let和const\"></a>let和const</h2><ul>\n<li><code>let、const</code>都是在块作用域内有效</li>\n<li>不能重复声明同名变量及常量</li>\n<li><code>const</code>基本类型的值不能修改，但引用类型的常量可以修改</li>\n<li><code>const</code>声明时必须赋值  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</div><div class=\"line\">    <span class=\"attr\">a</span>: <span class=\"number\">1</span></div><div class=\"line\">&#125;</div><div class=\"line\">obj.a = <span class=\"number\">2</span>; <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">// 数组解构赋值</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 3</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 undefined</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, c=<span class=\"number\">10</span>] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 10</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</div><div class=\"line\">    [a, b] = [b, a];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//2 1</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, ...c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 [3, 5]</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b;</div><div class=\"line\">    [a,...a] = f();</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a) <span class=\"comment\">//1 [2, 3]</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">// 对象解构赋值</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b;</div><div class=\"line\">    &#123;a,b&#125; = &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>&#125;;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//1 2</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"keyword\">let</span> o = &#123;</div><div class=\"line\">        <span class=\"attr\">a</span>: <span class=\"number\">12</span>,</div><div class=\"line\">        <span class=\"attr\">b</span>: <span class=\"number\">345</span></div><div class=\"line\">   &#125;;</div><div class=\"line\">   <span class=\"keyword\">let</span> &#123;a, b&#125; = o;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//12 345</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"keyword\">let</span> o = &#123;</div><div class=\"line\">        <span class=\"attr\">a</span>: <span class=\"number\">12</span>,</div><div class=\"line\">        <span class=\"attr\">b</span>: <span class=\"number\">345</span></div><div class=\"line\">   &#125;;</div><div class=\"line\">   <span class=\"keyword\">let</span> &#123;a = <span class=\"number\">100</span>, b&#125; = o;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//100 345</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">'a'</span>,</div><div class=\"line\">        <span class=\"attr\">test</span>: [&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'b'</span></div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;;</div><div class=\"line\">    lef &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: esType,</div><div class=\"line\">        <span class=\"attr\">test</span>:[</div><div class=\"line\">            type: cnType</div><div class=\"line\">        ]</div><div class=\"line\">    &#125; = data;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(esType, cnType) <span class=\"comment\">//'a' 'b'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"正则扩展\"><a href=\"#正则扩展\" class=\"headerlink\" title=\"正则扩展\"></a>正则扩展</h2><ul>\n<li><p>如果第一个参数是<code>/xyz/ig</code>形式，第二个参数会覆盖前者的flags</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> reg1 = <span class=\"keyword\">new</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"regexp\">/xyz/ig</span>, <span class=\"string\">'i'</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(reg1.flags) <span class=\"comment\">// i</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>y</code>与<code>g</code>修饰符的区别</p>\n<ul>\n<li><code>g</code>修饰符会在多次调用，匹配剩下的内容是否包含正则内容<code>（没有位置限制）</code></li>\n<li><code>y</code>修饰符在多次调用，必须要求从<code>剩余的内容的第一位</code>成功<code>才能继续</code></li>\n</ul>\n</li>\n<li><code>u</code>修饰符<ul>\n<li>如果处理的字符里面有大于两个字节的字符</li>\n<li>修证<code>.</code>可以匹配任意字符的概念</li>\n<li><code>.</code>只能匹配<code>小于两个字节长度</code>的字符</li>\n</ul>\n</li>\n<li><code>s</code>修饰符<code>（提案）</code><ul>\n<li>匹配换行  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字符串扩展\"><a href=\"#字符串扩展\" class=\"headerlink\" title=\"字符串扩展\"></a>字符串扩展</h2><ul>\n<li>大于两个字节的字符使用<code>\\u{20BB7}</code>表示</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>ES6默认开始严格模式<code>&#39;use strict&#39;</code><br>块级zuo’yong’yu</p>\n<h2 id=\"let和const\"><a href=\"#let和const\" class=\"headerlink\" title=\"let和const\"></a>let和const</h2><ul>\n<li><code>let、const</code>都是在块作用域内有效</li>\n<li>不能重复声明同名变量及常量</li>\n<li><code>const</code>基本类型的值不能修改，但引用类型的常量可以修改</li>\n<li><code>const</code>声明时必须赋值  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</div><div class=\"line\">    <span class=\"attr\">a</span>: <span class=\"number\">1</span></div><div class=\"line\">&#125;</div><div class=\"line\">obj.a = <span class=\"number\">2</span>; <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"comment\">// 数组解构赋值</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 3</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 undefined</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, c=<span class=\"number\">10</span>] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 10</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</div><div class=\"line\">    [a, b] = [b, a];</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//2 1</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b, c;</div><div class=\"line\">    [a, b, ...c] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1 2 [3, 5]</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b;</div><div class=\"line\">    [a,...a] = f();</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a) <span class=\"comment\">//1 [2, 3]</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">// 对象解构赋值</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> a, b;</div><div class=\"line\">    &#123;a,b&#125; = &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>&#125;;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//1 2</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"keyword\">let</span> o = &#123;</div><div class=\"line\">        <span class=\"attr\">a</span>: <span class=\"number\">12</span>,</div><div class=\"line\">        <span class=\"attr\">b</span>: <span class=\"number\">345</span></div><div class=\"line\">   &#125;;</div><div class=\"line\">   <span class=\"keyword\">let</span> &#123;a, b&#125; = o;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//12 345</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"keyword\">let</span> o = &#123;</div><div class=\"line\">        <span class=\"attr\">a</span>: <span class=\"number\">12</span>,</div><div class=\"line\">        <span class=\"attr\">b</span>: <span class=\"number\">345</span></div><div class=\"line\">   &#125;;</div><div class=\"line\">   <span class=\"keyword\">let</span> &#123;a = <span class=\"number\">100</span>, b&#125; = o;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//100 345</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">'a'</span>,</div><div class=\"line\">        <span class=\"attr\">test</span>: [&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'b'</span></div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;;</div><div class=\"line\">    lef &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: esType,</div><div class=\"line\">        <span class=\"attr\">test</span>:[</div><div class=\"line\">            type: cnType</div><div class=\"line\">        ]</div><div class=\"line\">    &#125; = data;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(esType, cnType) <span class=\"comment\">//'a' 'b'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"正则扩展\"><a href=\"#正则扩展\" class=\"headerlink\" title=\"正则扩展\"></a>正则扩展</h2><ul>\n<li><p>如果第一个参数是<code>/xyz/ig</code>形式，第二个参数会覆盖前者的flags</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> reg1 = <span class=\"keyword\">new</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"regexp\">/xyz/ig</span>, <span class=\"string\">'i'</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(reg1.flags) <span class=\"comment\">// i</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>y</code>与<code>g</code>修饰符的区别</p>\n<ul>\n<li><code>g</code>修饰符会在多次调用，匹配剩下的内容是否包含正则内容<code>（没有位置限制）</code></li>\n<li><code>y</code>修饰符在多次调用，必须要求从<code>剩余的内容的第一位</code>成功<code>才能继续</code></li>\n</ul>\n</li>\n<li><code>u</code>修饰符<ul>\n<li>如果处理的字符里面有大于两个字节的字符</li>\n<li>修证<code>.</code>可以匹配任意字符的概念</li>\n<li><code>.</code>只能匹配<code>小于两个字节长度</code>的字符</li>\n</ul>\n</li>\n<li><code>s</code>修饰符<code>（提案）</code><ul>\n<li>匹配换行  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字符串扩展\"><a href=\"#字符串扩展\" class=\"headerlink\" title=\"字符串扩展\"></a>字符串扩展</h2><ul>\n<li>大于两个字节的字符使用<code>\\u{20BB7}</code>表示</li>\n</ul>\n"},{"title":"如何在一台电脑配置多个Git账户","date":"2017-04-28T03:30:19.000Z","_content":"\n[Git](https://git-scm.com/)相比大家已经不陌生了，也许是现在用的最多的版本控制工具了。\n\n这里我不对Git的使用做过多的说明，如果你还没用过Git的话，我建议你先去学习下吧，对你会有很大的帮助，这里我奉上 [廖雪峰的Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)。\n\n同时我这里操作的平台是MacOS，当然不同的平台会有稍微的不同，不过我相信通过度娘，你都可以得到解决。\n\n今天我主要来说一下，在一台电脑上设置多个Git账号。\n\n\n<!--more-->\n\n在`~/.ssh`目录下保存所有生成的密钥，建立`config`文件。\n\n```bash\n$ vim ~/.ssh/config\n```\n\nconfig文件内容如下：\n\n```\nHost github.com\nHostName github.com\nUser xiaoming\nIdentityFile ~/.ssh/id_rsa\n\nHost iuunhao\nHostName github.com\nUser iuunhao\nIdentityFile ~/.ssh/id_rsa_iuunhao\n```\n\n```bash\n　$ ssh-keygen -t rsa -C \"email\"\n ```\n  我们在生成ssh的时候在第一项填写一个名字`id_rsa_iuunhao`\n  \n  在`config`文件里的`IdentityFile`面需要对调用对应的文件。\n  \n  而`HostName`这里需要修改对应的`id_rsa_iuunhao`\n  \n  这个时候我们在clone项目的时候，`github.com`代表默认的`ssh key`就是在生成`ssh key`的时候没有填写任何内容那个用户\n  \n  如果是`iuunhao`用户，那在clone的时候需要修改一下地址\n  \n 原的地址：\n ```bash\n git@github.com:iuunhao/demos.git\n```\n\n修改为\n```bash\ngit@iuunhao:iuunhao/demos.git\n```\n\n这里的`xiaoming`是默认用户，正常clone项目就可以使用。\n\n全局的git `user.name`及`user.email`都配置的是`xiaoming`的信息\n\n但是需要用`iuunhao` 提交代码的时候需要注意，我们需要手动设置该项目的\n\n需要注意的是`User`这个内容要填写你的github用户名，其实就是git的`user.name`及`user.email`\n\n```bash\ngit config user.name \"username\"\ngit config user.email \"email\"\n```\n需要注意的这里取消` --global`参数。\n\n如果不注意这点的话，提交代码没问题，但是显示的信息，就不对了。\n\n会出现这样的情景。\n![](http://ww3.sinaimg.cn/large/006tNbRwly1ff2bd6m6paj30ql05ejrz.jpg)\n\n","source":"_posts/Git多账号配置.md","raw":"---\ntitle: 如何在一台电脑配置多个Git账户\ndate:  2017-04-28 11:30:19\ntags:\n---\n\n[Git](https://git-scm.com/)相比大家已经不陌生了，也许是现在用的最多的版本控制工具了。\n\n这里我不对Git的使用做过多的说明，如果你还没用过Git的话，我建议你先去学习下吧，对你会有很大的帮助，这里我奉上 [廖雪峰的Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)。\n\n同时我这里操作的平台是MacOS，当然不同的平台会有稍微的不同，不过我相信通过度娘，你都可以得到解决。\n\n今天我主要来说一下，在一台电脑上设置多个Git账号。\n\n\n<!--more-->\n\n在`~/.ssh`目录下保存所有生成的密钥，建立`config`文件。\n\n```bash\n$ vim ~/.ssh/config\n```\n\nconfig文件内容如下：\n\n```\nHost github.com\nHostName github.com\nUser xiaoming\nIdentityFile ~/.ssh/id_rsa\n\nHost iuunhao\nHostName github.com\nUser iuunhao\nIdentityFile ~/.ssh/id_rsa_iuunhao\n```\n\n```bash\n　$ ssh-keygen -t rsa -C \"email\"\n ```\n  我们在生成ssh的时候在第一项填写一个名字`id_rsa_iuunhao`\n  \n  在`config`文件里的`IdentityFile`面需要对调用对应的文件。\n  \n  而`HostName`这里需要修改对应的`id_rsa_iuunhao`\n  \n  这个时候我们在clone项目的时候，`github.com`代表默认的`ssh key`就是在生成`ssh key`的时候没有填写任何内容那个用户\n  \n  如果是`iuunhao`用户，那在clone的时候需要修改一下地址\n  \n 原的地址：\n ```bash\n git@github.com:iuunhao/demos.git\n```\n\n修改为\n```bash\ngit@iuunhao:iuunhao/demos.git\n```\n\n这里的`xiaoming`是默认用户，正常clone项目就可以使用。\n\n全局的git `user.name`及`user.email`都配置的是`xiaoming`的信息\n\n但是需要用`iuunhao` 提交代码的时候需要注意，我们需要手动设置该项目的\n\n需要注意的是`User`这个内容要填写你的github用户名，其实就是git的`user.name`及`user.email`\n\n```bash\ngit config user.name \"username\"\ngit config user.email \"email\"\n```\n需要注意的这里取消` --global`参数。\n\n如果不注意这点的话，提交代码没问题，但是显示的信息，就不对了。\n\n会出现这样的情景。\n![](http://ww3.sinaimg.cn/large/006tNbRwly1ff2bd6m6paj30ql05ejrz.jpg)\n\n","slug":"Git多账号配置","published":1,"updated":"2017-04-28T05:10:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21t2jsv0005zdmc9uq69cj4","content":"<p><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a>相比大家已经不陌生了，也许是现在用的最多的版本控制工具了。</p>\n<p>这里我不对Git的使用做过多的说明，如果你还没用过Git的话，我建议你先去学习下吧，对你会有很大的帮助，这里我奉上 <a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的Git教程</a>。</p>\n<p>同时我这里操作的平台是MacOS，当然不同的平台会有稍微的不同，不过我相信通过度娘，你都可以得到解决。</p>\n<p>今天我主要来说一下，在一台电脑上设置多个Git账号。</p>\n<a id=\"more\"></a>\n<p>在<code>~/.ssh</code>目录下保存所有生成的密钥，建立<code>config</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.ssh/config</div></pre></td></tr></table></figure>\n<p>config文件内容如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host github.com</div><div class=\"line\">HostName github.com</div><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"title\">xiaoming</span></div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div><div class=\"line\"></div><div class=\"line\">Host iuunhao</div><div class=\"line\">HostName github.com</div><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"title\">iuunhao</span></div><div class=\"line\">IdentityFile ~/.ssh/id_rsa_iuunhao</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">　$ ssh-keygen -t rsa -C <span class=\"string\">\"email\"</span></div></pre></td></tr></table></figure>\n<p>  我们在生成ssh的时候在第一项填写一个名字<code>id_rsa_iuunhao</code></p>\n<p>  在<code>config</code>文件里的<code>IdentityFile</code>面需要对调用对应的文件。</p>\n<p>  而<code>HostName</code>这里需要修改对应的<code>id_rsa_iuunhao</code></p>\n<p>  这个时候我们在clone项目的时候，<code>github.com</code>代表默认的<code>ssh key</code>就是在生成<code>ssh key</code>的时候没有填写任何内容那个用户</p>\n<p>  如果是<code>iuunhao</code>用户，那在clone的时候需要修改一下地址</p>\n<p> 原的地址：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git@github.com:iuunhao/demos.git</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git@iuunhao:iuunhao/demos.git</div></pre></td></tr></table></figure></p>\n<p>这里的<code>xiaoming</code>是默认用户，正常clone项目就可以使用。</p>\n<p>全局的git <code>user.name</code>及<code>user.email</code>都配置的是<code>xiaoming</code>的信息</p>\n<p>但是需要用<code>iuunhao</code> 提交代码的时候需要注意，我们需要手动设置该项目的</p>\n<p>需要注意的是<code>User</code>这个内容要填写你的github用户名，其实就是git的<code>user.name</code>及<code>user.email</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config user.name <span class=\"string\">\"username\"</span></div><div class=\"line\">git config user.email <span class=\"string\">\"email\"</span></div></pre></td></tr></table></figure>\n<p>需要注意的这里取消<code>--global</code>参数。</p>\n<p>如果不注意这点的话，提交代码没问题，但是显示的信息，就不对了。</p>\n<p>会出现这样的情景。<br><img src=\"http://ww3.sinaimg.cn/large/006tNbRwly1ff2bd6m6paj30ql05ejrz.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://git-scm.com/\">Git</a>相比大家已经不陌生了，也许是现在用的最多的版本控制工具了。</p>\n<p>这里我不对Git的使用做过多的说明，如果你还没用过Git的话，我建议你先去学习下吧，对你会有很大的帮助，这里我奉上 <a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的Git教程</a>。</p>\n<p>同时我这里操作的平台是MacOS，当然不同的平台会有稍微的不同，不过我相信通过度娘，你都可以得到解决。</p>\n<p>今天我主要来说一下，在一台电脑上设置多个Git账号。</p>","more":"<p>在<code>~/.ssh</code>目录下保存所有生成的密钥，建立<code>config</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.ssh/config</div></pre></td></tr></table></figure>\n<p>config文件内容如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host github.com</div><div class=\"line\">HostName github.com</div><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"title\">xiaoming</span></div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div><div class=\"line\"></div><div class=\"line\">Host iuunhao</div><div class=\"line\">HostName github.com</div><div class=\"line\"><span class=\"keyword\">User</span> <span class=\"title\">iuunhao</span></div><div class=\"line\">IdentityFile ~/.ssh/id_rsa_iuunhao</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">　$ ssh-keygen -t rsa -C <span class=\"string\">\"email\"</span></div></pre></td></tr></table></figure>\n<p>  我们在生成ssh的时候在第一项填写一个名字<code>id_rsa_iuunhao</code></p>\n<p>  在<code>config</code>文件里的<code>IdentityFile</code>面需要对调用对应的文件。</p>\n<p>  而<code>HostName</code>这里需要修改对应的<code>id_rsa_iuunhao</code></p>\n<p>  这个时候我们在clone项目的时候，<code>github.com</code>代表默认的<code>ssh key</code>就是在生成<code>ssh key</code>的时候没有填写任何内容那个用户</p>\n<p>  如果是<code>iuunhao</code>用户，那在clone的时候需要修改一下地址</p>\n<p> 原的地址：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git@github.com:iuunhao/demos.git</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git@iuunhao:iuunhao/demos.git</div></pre></td></tr></table></figure></p>\n<p>这里的<code>xiaoming</code>是默认用户，正常clone项目就可以使用。</p>\n<p>全局的git <code>user.name</code>及<code>user.email</code>都配置的是<code>xiaoming</code>的信息</p>\n<p>但是需要用<code>iuunhao</code> 提交代码的时候需要注意，我们需要手动设置该项目的</p>\n<p>需要注意的是<code>User</code>这个内容要填写你的github用户名，其实就是git的<code>user.name</code>及<code>user.email</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config user.name <span class=\"string\">\"username\"</span></div><div class=\"line\">git config user.email <span class=\"string\">\"email\"</span></div></pre></td></tr></table></figure>\n<p>需要注意的这里取消<code>--global</code>参数。</p>\n<p>如果不注意这点的话，提交代码没问题，但是显示的信息，就不对了。</p>\n<p>会出现这样的情景。<br><img src=\"http://ww3.sinaimg.cn/large/006tNbRwly1ff2bd6m6paj30ql05ejrz.jpg\" alt=\"\"></p>"},{"title":"Javascript代码片段（持续更新）","date":"2017-04-27T04:26:06.000Z","_content":"\n\n## 继承\n\n```js\n/**\n * 继承\n */\nfunction extend(Child, Parent) {　　　　\n    var F = function() {};　　　　\n    F.prototype = Parent.prototype;　　　　\n    Child.prototype = new F();　　　　\n    Child.prototype.constructor = Child;　　　　\n    Child.uber = Parent.prototype;　　\n}\n\nvar Perent = function() {};\nPerent.prototype = {\n    say: function() {\n        console.log('Perent say function');\n    }\n}\n\nvar Children = function() {}\nextend(Children, Perent);\nChildren.prototype.eat = function(){\n        console.log('eat');\n}\nChildren.prototype.say = function(){\n        console.log('children say function');\n}\n```\n\n## 单例模式\n```js\n/**\n * 单例模式\n */\n\nvar single = (function() {\n    //初始化操作\n    var a = 100;\n    function init() {\n        //累计变量\n        var cnt = 0;\n        //获取随机数\n        this.getRandomNum = function() {\n            console.log(a);\n            return Math.random();\n        }\n        //累计数\n        this.count = function() {\n            return cnt++;\n        }\n    }\n\n    //实例保持者\n    var instance;\n\n    return {\n        //获取实例\n        getInstance: function() {\n            return instance || (instance = new init());\n        },\n        //销毁实例\n        destroyInstance: function() {\n            if (instance) {\n                instance = null;\n            }\n        }\n    }\n})();\n```\n\n## 代理模式\n\n```js\n/**\n * 代理模式\n */\n\nvar myImage = (function() {\n    var imgNode = document.createElement(\"img\");\n    document.body.appendChild(imgNode);\n\n    return {\n        setSrc: function(src) {\n            imgNode.src = src;\n        }\n    }\n})();\n\nvar proxyImage = (function() {\n    var img = new Image;\n    img.onload = function() {\n        // 图片加载完成，正式加载图片\n        myImage.setSrc(this.src);\n    };\n    return {\n        setSrc: function(src) {\n            // 图片未被载入时，加载一张提示图片\n            myImage.setSrc(\"1.gif\");\n            img.src = src;\n        }\n    }\n})();\n// 调用代理对象加载图片\nproxyImage.setSrc(\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-508690.jpg\");\n```\n\n## 装饰者模式\n\n```js\n/**\n * 装饰者模式\n */\n\nvar House = function() {};\nHouse.prototype.room = function() {\n    console.log('room');\n}\n\nvar Decorator = function(room) {\n    this.decorator_room = room;\n}\nDecorator.prototype.room = function() {\n    this.decorator_room.room();\n    console.log('decorator room');\n}\n\n\nvar house = new House;\nvar decoHouse = new Decorator(house);\ndecoHouse.room();\n```\n","source":"_posts/Javascript代码片段（持续更新）.md","raw":"---\ntitle: Javascript代码片段（持续更新）\ndate: 2017-04-27 12:26:06\ntags:\n---\n\n\n## 继承\n\n```js\n/**\n * 继承\n */\nfunction extend(Child, Parent) {　　　　\n    var F = function() {};　　　　\n    F.prototype = Parent.prototype;　　　　\n    Child.prototype = new F();　　　　\n    Child.prototype.constructor = Child;　　　　\n    Child.uber = Parent.prototype;　　\n}\n\nvar Perent = function() {};\nPerent.prototype = {\n    say: function() {\n        console.log('Perent say function');\n    }\n}\n\nvar Children = function() {}\nextend(Children, Perent);\nChildren.prototype.eat = function(){\n        console.log('eat');\n}\nChildren.prototype.say = function(){\n        console.log('children say function');\n}\n```\n\n## 单例模式\n```js\n/**\n * 单例模式\n */\n\nvar single = (function() {\n    //初始化操作\n    var a = 100;\n    function init() {\n        //累计变量\n        var cnt = 0;\n        //获取随机数\n        this.getRandomNum = function() {\n            console.log(a);\n            return Math.random();\n        }\n        //累计数\n        this.count = function() {\n            return cnt++;\n        }\n    }\n\n    //实例保持者\n    var instance;\n\n    return {\n        //获取实例\n        getInstance: function() {\n            return instance || (instance = new init());\n        },\n        //销毁实例\n        destroyInstance: function() {\n            if (instance) {\n                instance = null;\n            }\n        }\n    }\n})();\n```\n\n## 代理模式\n\n```js\n/**\n * 代理模式\n */\n\nvar myImage = (function() {\n    var imgNode = document.createElement(\"img\");\n    document.body.appendChild(imgNode);\n\n    return {\n        setSrc: function(src) {\n            imgNode.src = src;\n        }\n    }\n})();\n\nvar proxyImage = (function() {\n    var img = new Image;\n    img.onload = function() {\n        // 图片加载完成，正式加载图片\n        myImage.setSrc(this.src);\n    };\n    return {\n        setSrc: function(src) {\n            // 图片未被载入时，加载一张提示图片\n            myImage.setSrc(\"1.gif\");\n            img.src = src;\n        }\n    }\n})();\n// 调用代理对象加载图片\nproxyImage.setSrc(\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-508690.jpg\");\n```\n\n## 装饰者模式\n\n```js\n/**\n * 装饰者模式\n */\n\nvar House = function() {};\nHouse.prototype.room = function() {\n    console.log('room');\n}\n\nvar Decorator = function(room) {\n    this.decorator_room = room;\n}\nDecorator.prototype.room = function() {\n    this.decorator_room.room();\n    console.log('decorator room');\n}\n\n\nvar house = new House;\nvar decoHouse = new Decorator(house);\ndecoHouse.room();\n```\n","slug":"Javascript代码片段（持续更新）","published":1,"updated":"2017-04-27T05:55:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21t2jsw0006zdmc3u4yhx15","content":"<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 继承</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">extend</span>(<span class=\"params\">Child, Parent</span>) </span>&#123;　　　　</div><div class=\"line\">    <span class=\"keyword\">var</span> F = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;　　　　</div><div class=\"line\">    F.prototype = Parent.prototype;　　　　</div><div class=\"line\">    Child.prototype = <span class=\"keyword\">new</span> F();　　　　</div><div class=\"line\">    Child.prototype.constructor = Child;　　　　</div><div class=\"line\">    Child.uber = Parent.prototype;　　</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Perent = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</div><div class=\"line\">Perent.prototype = &#123;</div><div class=\"line\">    <span class=\"attr\">say</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Perent say function'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Children = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">extend(Children, Perent);</div><div class=\"line\">Children.prototype.eat = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'eat'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">Children.prototype.say = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'children say function'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 单例模式</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> single = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//初始化操作</span></div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//累计变量</span></div><div class=\"line\">        <span class=\"keyword\">var</span> cnt = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"comment\">//获取随机数</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.getRandomNum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//累计数</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.count = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> cnt++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//实例保持者</span></div><div class=\"line\">    <span class=\"keyword\">var</span> instance;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"comment\">//获取实例</span></div><div class=\"line\">        getInstance: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> instance || (instance = <span class=\"keyword\">new</span> init());</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//销毁实例</span></div><div class=\"line\">        destroyInstance: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (instance) &#123;</div><div class=\"line\">                instance = <span class=\"literal\">null</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 代理模式</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> myImage = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> imgNode = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"img\"</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(imgNode);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">setSrc</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">            imgNode.src = src;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> proxyImage = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image;</div><div class=\"line\">    img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 图片加载完成，正式加载图片</span></div><div class=\"line\">        myImage.setSrc(<span class=\"keyword\">this</span>.src);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">setSrc</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// 图片未被载入时，加载一张提示图片</span></div><div class=\"line\">            myImage.setSrc(<span class=\"string\">\"1.gif\"</span>);</div><div class=\"line\">            img.src = src;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\"><span class=\"comment\">// 调用代理对象加载图片</span></div><div class=\"line\">proxyImage.setSrc(<span class=\"string\">\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-508690.jpg\"</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"装饰者模式\"><a href=\"#装饰者模式\" class=\"headerlink\" title=\"装饰者模式\"></a>装饰者模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 装饰者模式</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> House = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</div><div class=\"line\">House.prototype.room = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'room'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Decorator = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">room</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.decorator_room = room;</div><div class=\"line\">&#125;</div><div class=\"line\">Decorator.prototype.room = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.decorator_room.room();</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'decorator room'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> house = <span class=\"keyword\">new</span> House;</div><div class=\"line\"><span class=\"keyword\">var</span> decoHouse = <span class=\"keyword\">new</span> Decorator(house);</div><div class=\"line\">decoHouse.room();</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 继承</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">extend</span>(<span class=\"params\">Child, Parent</span>) </span>&#123;　　　　</div><div class=\"line\">    <span class=\"keyword\">var</span> F = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;　　　　</div><div class=\"line\">    F.prototype = Parent.prototype;　　　　</div><div class=\"line\">    Child.prototype = <span class=\"keyword\">new</span> F();　　　　</div><div class=\"line\">    Child.prototype.constructor = Child;　　　　</div><div class=\"line\">    Child.uber = Parent.prototype;　　</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Perent = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</div><div class=\"line\">Perent.prototype = &#123;</div><div class=\"line\">    <span class=\"attr\">say</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Perent say function'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Children = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">extend(Children, Perent);</div><div class=\"line\">Children.prototype.eat = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'eat'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">Children.prototype.say = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'children say function'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 单例模式</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> single = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//初始化操作</span></div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//累计变量</span></div><div class=\"line\">        <span class=\"keyword\">var</span> cnt = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"comment\">//获取随机数</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.getRandomNum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//累计数</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.count = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> cnt++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//实例保持者</span></div><div class=\"line\">    <span class=\"keyword\">var</span> instance;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"comment\">//获取实例</span></div><div class=\"line\">        getInstance: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> instance || (instance = <span class=\"keyword\">new</span> init());</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//销毁实例</span></div><div class=\"line\">        destroyInstance: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (instance) &#123;</div><div class=\"line\">                instance = <span class=\"literal\">null</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<h2 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 代理模式</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> myImage = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> imgNode = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"img\"</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(imgNode);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">setSrc</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">            imgNode.src = src;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> proxyImage = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image;</div><div class=\"line\">    img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 图片加载完成，正式加载图片</span></div><div class=\"line\">        myImage.setSrc(<span class=\"keyword\">this</span>.src);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">setSrc</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// 图片未被载入时，加载一张提示图片</span></div><div class=\"line\">            myImage.setSrc(<span class=\"string\">\"1.gif\"</span>);</div><div class=\"line\">            img.src = src;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\"><span class=\"comment\">// 调用代理对象加载图片</span></div><div class=\"line\">proxyImage.setSrc(<span class=\"string\">\"https://wallpapers.wallhaven.cc/wallpapers/full/wallhaven-508690.jpg\"</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"装饰者模式\"><a href=\"#装饰者模式\" class=\"headerlink\" title=\"装饰者模式\"></a>装饰者模式</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 装饰者模式</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> House = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</div><div class=\"line\">House.prototype.room = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'room'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> Decorator = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">room</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.decorator_room = room;</div><div class=\"line\">&#125;</div><div class=\"line\">Decorator.prototype.room = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.decorator_room.room();</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'decorator room'</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> house = <span class=\"keyword\">new</span> House;</div><div class=\"line\"><span class=\"keyword\">var</span> decoHouse = <span class=\"keyword\">new</span> Decorator(house);</div><div class=\"line\">decoHouse.room();</div></pre></td></tr></table></figure>\n"},{"title":"Javascript概念整理(持续更新)","date":"2016-04-28T03:30:19.000Z","_content":"\n## 闭包\n当函数可以记住并访问所在的作用域(全局作用域除外)时，就产生了闭包，即使函数是在当前作用域之外执行。\n\n## 作用域链\n作用域链，是由当前环境与上层环境的一系列变量对象组成，它保证了当前执行环境对符合访问权限的变量和函数的有序访问。\n\n##  运行环境\n* 全局环境\n* 函数环境\n* eval\n\n当代码在执行过程中，遇到以上三种情况，都会生成一个执行上下文，放入栈中，而处于栈顶的上下文执行完毕之后，就会自动出栈，栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。\n\n全局上下文在浏览器窗口关闭后出栈。\n\n<!--more-->\n\n## 变量对象\n* 检查当前上下文的函数声明，也就是使用function关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。\n\n* 检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名建立一个属性，属性值为undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为undefined，则会直接跳过，原属性值不会被修改。\n\n* 全局上下文有一个特殊的地方，它的变量对象，就是window对象。而这个特殊，在this指向上也同样适用，this也是指向window。\n\n## this\nthis的指向，是在函数被调用的时候确定的，在函数执行过程中，this一旦被确定，就不可更改了。\n\n* 如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。\n* 如果函数独立调用，那么该函数内部的this，则指向undefined,如果在严格模式，this则指向window。\n* 如果是构造函数，那么this指向实例化对象。\n* call、apply可以改变this的指向\n\n## 函数式编程\n函数式编程要求，只使用表达式，不使用语句。也就是说，每一步都是单纯的运算，而且都有返回值。\n\n## 面向对象\n**构造函数中**\n> 属性与方法为当前实例单独拥有，只能被当前实例访问，并且每声明一个实例，其中的方法都会被重新创建一次。\n\n**原型中**\n> 属性与方法为所有实例共同拥有，可以被所有实例访问，新声明实例不会重复创建方法。\n\n**模块作用域中**\n> 属性和方法不能被任何实例访问，但是能被内部方法访问，新声明的实例，不会重复创建相同的方法。","source":"_posts/Javascript概念整理(持续更新).md","raw":"---\ntitle: Javascript概念整理(持续更新)\ndate: 2016-04-28 11:30:19\ntags:\n---\n\n## 闭包\n当函数可以记住并访问所在的作用域(全局作用域除外)时，就产生了闭包，即使函数是在当前作用域之外执行。\n\n## 作用域链\n作用域链，是由当前环境与上层环境的一系列变量对象组成，它保证了当前执行环境对符合访问权限的变量和函数的有序访问。\n\n##  运行环境\n* 全局环境\n* 函数环境\n* eval\n\n当代码在执行过程中，遇到以上三种情况，都会生成一个执行上下文，放入栈中，而处于栈顶的上下文执行完毕之后，就会自动出栈，栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。\n\n全局上下文在浏览器窗口关闭后出栈。\n\n<!--more-->\n\n## 变量对象\n* 检查当前上下文的函数声明，也就是使用function关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。\n\n* 检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名建立一个属性，属性值为undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为undefined，则会直接跳过，原属性值不会被修改。\n\n* 全局上下文有一个特殊的地方，它的变量对象，就是window对象。而这个特殊，在this指向上也同样适用，this也是指向window。\n\n## this\nthis的指向，是在函数被调用的时候确定的，在函数执行过程中，this一旦被确定，就不可更改了。\n\n* 如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。\n* 如果函数独立调用，那么该函数内部的this，则指向undefined,如果在严格模式，this则指向window。\n* 如果是构造函数，那么this指向实例化对象。\n* call、apply可以改变this的指向\n\n## 函数式编程\n函数式编程要求，只使用表达式，不使用语句。也就是说，每一步都是单纯的运算，而且都有返回值。\n\n## 面向对象\n**构造函数中**\n> 属性与方法为当前实例单独拥有，只能被当前实例访问，并且每声明一个实例，其中的方法都会被重新创建一次。\n\n**原型中**\n> 属性与方法为所有实例共同拥有，可以被所有实例访问，新声明实例不会重复创建方法。\n\n**模块作用域中**\n> 属性和方法不能被任何实例访问，但是能被内部方法访问，新声明的实例，不会重复创建相同的方法。","slug":"Javascript概念整理(持续更新)","published":1,"updated":"2017-04-28T04:09:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21t2jsy0007zdmcgsjt4vyq","content":"<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>当函数可以记住并访问所在的作用域(全局作用域除外)时，就产生了闭包，即使函数是在当前作用域之外执行。</p>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><p>作用域链，是由当前环境与上层环境的一系列变量对象组成，它保证了当前执行环境对符合访问权限的变量和函数的有序访问。</p>\n<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><ul>\n<li>全局环境</li>\n<li>函数环境</li>\n<li>eval</li>\n</ul>\n<p>当代码在执行过程中，遇到以上三种情况，都会生成一个执行上下文，放入栈中，而处于栈顶的上下文执行完毕之后，就会自动出栈，栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。</p>\n<p>全局上下文在浏览器窗口关闭后出栈。</p>\n<a id=\"more\"></a>\n<h2 id=\"变量对象\"><a href=\"#变量对象\" class=\"headerlink\" title=\"变量对象\"></a>变量对象</h2><ul>\n<li><p>检查当前上下文的函数声明，也就是使用function关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。</p>\n</li>\n<li><p>检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名建立一个属性，属性值为undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为undefined，则会直接跳过，原属性值不会被修改。</p>\n</li>\n<li><p>全局上下文有一个特殊的地方，它的变量对象，就是window对象。而这个特殊，在this指向上也同样适用，this也是指向window。</p>\n</li>\n</ul>\n<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>this的指向，是在函数被调用的时候确定的，在函数执行过程中，this一旦被确定，就不可更改了。</p>\n<ul>\n<li>如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。</li>\n<li>如果函数独立调用，那么该函数内部的this，则指向undefined,如果在严格模式，this则指向window。</li>\n<li>如果是构造函数，那么this指向实例化对象。</li>\n<li>call、apply可以改变this的指向</li>\n</ul>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>函数式编程要求，只使用表达式，不使用语句。也就是说，每一步都是单纯的运算，而且都有返回值。</p>\n<h2 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h2><p><strong>构造函数中</strong></p>\n<blockquote>\n<p>属性与方法为当前实例单独拥有，只能被当前实例访问，并且每声明一个实例，其中的方法都会被重新创建一次。</p>\n</blockquote>\n<p><strong>原型中</strong></p>\n<blockquote>\n<p>属性与方法为所有实例共同拥有，可以被所有实例访问，新声明实例不会重复创建方法。</p>\n</blockquote>\n<p><strong>模块作用域中</strong></p>\n<blockquote>\n<p>属性和方法不能被任何实例访问，但是能被内部方法访问，新声明的实例，不会重复创建相同的方法。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>当函数可以记住并访问所在的作用域(全局作用域除外)时，就产生了闭包，即使函数是在当前作用域之外执行。</p>\n<h2 id=\"作用域链\"><a href=\"#作用域链\" class=\"headerlink\" title=\"作用域链\"></a>作用域链</h2><p>作用域链，是由当前环境与上层环境的一系列变量对象组成，它保证了当前执行环境对符合访问权限的变量和函数的有序访问。</p>\n<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><ul>\n<li>全局环境</li>\n<li>函数环境</li>\n<li>eval</li>\n</ul>\n<p>当代码在执行过程中，遇到以上三种情况，都会生成一个执行上下文，放入栈中，而处于栈顶的上下文执行完毕之后，就会自动出栈，栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。</p>\n<p>全局上下文在浏览器窗口关闭后出栈。</p>","more":"<h2 id=\"变量对象\"><a href=\"#变量对象\" class=\"headerlink\" title=\"变量对象\"></a>变量对象</h2><ul>\n<li><p>检查当前上下文的函数声明，也就是使用function关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。</p>\n</li>\n<li><p>检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名建立一个属性，属性值为undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为undefined，则会直接跳过，原属性值不会被修改。</p>\n</li>\n<li><p>全局上下文有一个特殊的地方，它的变量对象，就是window对象。而这个特殊，在this指向上也同样适用，this也是指向window。</p>\n</li>\n</ul>\n<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>this的指向，是在函数被调用的时候确定的，在函数执行过程中，this一旦被确定，就不可更改了。</p>\n<ul>\n<li>如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。</li>\n<li>如果函数独立调用，那么该函数内部的this，则指向undefined,如果在严格模式，this则指向window。</li>\n<li>如果是构造函数，那么this指向实例化对象。</li>\n<li>call、apply可以改变this的指向</li>\n</ul>\n<h2 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h2><p>函数式编程要求，只使用表达式，不使用语句。也就是说，每一步都是单纯的运算，而且都有返回值。</p>\n<h2 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h2><p><strong>构造函数中</strong></p>\n<blockquote>\n<p>属性与方法为当前实例单独拥有，只能被当前实例访问，并且每声明一个实例，其中的方法都会被重新创建一次。</p>\n</blockquote>\n<p><strong>原型中</strong></p>\n<blockquote>\n<p>属性与方法为所有实例共同拥有，可以被所有实例访问，新声明实例不会重复创建方法。</p>\n</blockquote>\n<p><strong>模块作用域中</strong></p>\n<blockquote>\n<p>属性和方法不能被任何实例访问，但是能被内部方法访问，新声明的实例，不会重复创建相同的方法。</p>\n</blockquote>"},{"title":"Sublime配置","date":"2014-09-27T09:40:45.000Z","_content":"\n说一下我们常用的Sublime编辑器的基本配置，和一些常用的插件。\n\n不废话，先上我们的基本配置文件内容：\n\n```json\n{\n\t\"bold_folder_labels\": true,\n\t\"caret_extra_bottom\": 2,\n\t\"caret_extra_top\": 2,\n\t\"caret_extra_width\": 3,\n\t\"caret_style\": \"phase\",\n\t\"debug\": true,\n\t\"fade_fold_buttons\": false,\n\t\"font_face\": \"Office Code pro\",\n\t\"font_size\": 26,\n\t\"highlight_line\": true,\n\t\"highlight_modified_tabs\": true,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"indent_guide_options\":\n\t[\n\t\t\"draw_normal\",\n\t\t\"draw_active\"\n\t],\n\t\"jslint\":\n\t[\n\t\t\"nodejs\",\n\t\t\"~/.config/sublime-text-2/Packages/JSLint/linter.js\"\n\t],\n\t\"line_padding_bottom\": 1,\n\t\"line_padding_top\": 1,\n\t\"margin\": 4,\n\t\"theme\": \"ayu-dark2.sublime-theme\",\n\t\"translate_tabs_to_spaces\": true,\n\t\"update_check\": false,\n\t\"wide_caret\": true,\n\t\"word_separators\": \"./\\\\()\\\"':,.;<>~!@#$%^&*|+=[]{}`~?\",\n\t\"word_wrap\": true\n}\n```\n\n<!--more-->\n\n配置里面没有写配色，这个根据自己的喜好自行设置，字体也需要自己去配置，这里我推荐的是[Office Code pro](https://github.com/nathco/Office-Code-Pro)自行下载。\n\n\n## Package Install\n\n在国内安装sublime的插件经常会出现安装的情况，这个情况很正常，我们不需要做任何处理，在不同的时间多去尝试几次就可以了。安装插件我们需要先安装`Package Control`，这个安装教程网上很多，我这里也就不多解释了，直接贴代码。\n\n\n\n\nsublime2与sublime3的安装有区别，我们根据自己的版本执行对应的命令即可。\n\n从菜单 View - Show Console 或者 ctrl + ~ 快捷键，调出 console。将以下 Python 代码粘贴进去并 enter 执行，不出意外即完成安装。以下提供 ST3 和 ST2 的安装代码：\n\n### Sublime2\n```py\nimport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n```\n\n### Sublime3\n```py\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n重启Sublime Text\n\n快捷键 Ctrl+Shift+P（菜单 – Tools – Command Paletter），输入 install 选中Install Package并回车，输入或选择你需要的插件回车就安装了（注意左下角的小文字变化，会提示安装成功）。\n\n## Package List\n\n[官方插件列表](https://packagecontrol.io/)\n\n* All Autocomplete (补全可以跨文件补全)\n* AutoFileName(自动补全文件名)\n* ayu(一个很漂亮的配色主题)\n* BracketHighlighter(可以高亮代码块)\n* Color Highlighter (可以将代码中的所有变量高亮)\n* Colorcoder (可以高亮代码中的颜色)\n* CSScomb(css排序)\n* DocBlockr(js注释文档) \n* Emmet(htmlcss代码补全)\n* File History(本地文件会生成版本，可以回滚代码)\n* Git(git的所有功能)\n* Gitignore(可以自动创建一些常用的git过滤文件)\n* HTML-CSS-JS Prettify(htmlcssjs的代码格式化)\n* JavaScript Completions(原生js的代码补全)\n* JavaScriptNext - ES6 Syntax (ES6代码语法高亮)\n* Nodejs(nodejs代码补全)\n* SublimeCodeIntel(很强打的一个提示跳转工具)\n* SVN(svn)\n* Terminality(翻译工具)\n* SublimeLinter(语法检测工具)\n* SublimeLinter-csslint(css语法检测)\n* SublimeLinter-jscs(js语法检测)\n\n以上插件都是一些基本插件，你可以根据自己的工作需要继续添加你所需要的插件。\n\n","source":"_posts/Sublime配置.md","raw":"---\ntitle: Sublime配置\ndate: 2014-09-27 17:40:45\ntags: sublime package config\n---\n\n说一下我们常用的Sublime编辑器的基本配置，和一些常用的插件。\n\n不废话，先上我们的基本配置文件内容：\n\n```json\n{\n\t\"bold_folder_labels\": true,\n\t\"caret_extra_bottom\": 2,\n\t\"caret_extra_top\": 2,\n\t\"caret_extra_width\": 3,\n\t\"caret_style\": \"phase\",\n\t\"debug\": true,\n\t\"fade_fold_buttons\": false,\n\t\"font_face\": \"Office Code pro\",\n\t\"font_size\": 26,\n\t\"highlight_line\": true,\n\t\"highlight_modified_tabs\": true,\n\t\"ignored_packages\":\n\t[\n\t\t\"Vintage\"\n\t],\n\t\"indent_guide_options\":\n\t[\n\t\t\"draw_normal\",\n\t\t\"draw_active\"\n\t],\n\t\"jslint\":\n\t[\n\t\t\"nodejs\",\n\t\t\"~/.config/sublime-text-2/Packages/JSLint/linter.js\"\n\t],\n\t\"line_padding_bottom\": 1,\n\t\"line_padding_top\": 1,\n\t\"margin\": 4,\n\t\"theme\": \"ayu-dark2.sublime-theme\",\n\t\"translate_tabs_to_spaces\": true,\n\t\"update_check\": false,\n\t\"wide_caret\": true,\n\t\"word_separators\": \"./\\\\()\\\"':,.;<>~!@#$%^&*|+=[]{}`~?\",\n\t\"word_wrap\": true\n}\n```\n\n<!--more-->\n\n配置里面没有写配色，这个根据自己的喜好自行设置，字体也需要自己去配置，这里我推荐的是[Office Code pro](https://github.com/nathco/Office-Code-Pro)自行下载。\n\n\n## Package Install\n\n在国内安装sublime的插件经常会出现安装的情况，这个情况很正常，我们不需要做任何处理，在不同的时间多去尝试几次就可以了。安装插件我们需要先安装`Package Control`，这个安装教程网上很多，我这里也就不多解释了，直接贴代码。\n\n\n\n\nsublime2与sublime3的安装有区别，我们根据自己的版本执行对应的命令即可。\n\n从菜单 View - Show Console 或者 ctrl + ~ 快捷键，调出 console。将以下 Python 代码粘贴进去并 enter 执行，不出意外即完成安装。以下提供 ST3 和 ST2 的安装代码：\n\n### Sublime2\n```py\nimport urllib2,os; pf='Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), 'wb' ).write( urllib2.urlopen( 'http://sublime.wbond.net/' +pf.replace( ' ','%20' )).read()); print( 'Please restart Sublime Text to finish installation')\n```\n\n### Sublime3\n```py\nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n```\n\n重启Sublime Text\n\n快捷键 Ctrl+Shift+P（菜单 – Tools – Command Paletter），输入 install 选中Install Package并回车，输入或选择你需要的插件回车就安装了（注意左下角的小文字变化，会提示安装成功）。\n\n## Package List\n\n[官方插件列表](https://packagecontrol.io/)\n\n* All Autocomplete (补全可以跨文件补全)\n* AutoFileName(自动补全文件名)\n* ayu(一个很漂亮的配色主题)\n* BracketHighlighter(可以高亮代码块)\n* Color Highlighter (可以将代码中的所有变量高亮)\n* Colorcoder (可以高亮代码中的颜色)\n* CSScomb(css排序)\n* DocBlockr(js注释文档) \n* Emmet(htmlcss代码补全)\n* File History(本地文件会生成版本，可以回滚代码)\n* Git(git的所有功能)\n* Gitignore(可以自动创建一些常用的git过滤文件)\n* HTML-CSS-JS Prettify(htmlcssjs的代码格式化)\n* JavaScript Completions(原生js的代码补全)\n* JavaScriptNext - ES6 Syntax (ES6代码语法高亮)\n* Nodejs(nodejs代码补全)\n* SublimeCodeIntel(很强打的一个提示跳转工具)\n* SVN(svn)\n* Terminality(翻译工具)\n* SublimeLinter(语法检测工具)\n* SublimeLinter-csslint(css语法检测)\n* SublimeLinter-jscs(js语法检测)\n\n以上插件都是一些基本插件，你可以根据自己的工作需要继续添加你所需要的插件。\n\n","slug":"Sublime配置","published":1,"updated":"2017-04-27T04:51:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj21t2jt10009zdmc6a46t56n","content":"<p>说一下我们常用的Sublime编辑器的基本配置，和一些常用的插件。</p>\n<p>不废话，先上我们的基本配置文件内容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"bold_folder_labels\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_bottom\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_top\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_width\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_style\"</span>: <span class=\"string\">\"phase\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"debug\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"fade_fold_buttons\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">\"font_face\"</span>: <span class=\"string\">\"Office Code pro\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"font_size\"</span>: <span class=\"number\">26</span>,</div><div class=\"line\">\t<span class=\"attr\">\"highlight_line\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"highlight_modified_tabs\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"ignored_packages\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"Vintage\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"indent_guide_options\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"draw_normal\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"draw_active\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"jslint\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"nodejs\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"~/.config/sublime-text-2/Packages/JSLint/linter.js\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_bottom\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_top\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"attr\">\"margin\"</span>: <span class=\"number\">4</span>,</div><div class=\"line\">\t<span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"ayu-dark2.sublime-theme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"update_check\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">\"wide_caret\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_separators\"</span>: <span class=\"string\">\"./\\\\()\\\"':,.;&lt;&gt;~!@#$%^&amp;*|+=[]&#123;&#125;`~?\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_wrap\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>配置里面没有写配色，这个根据自己的喜好自行设置，字体也需要自己去配置，这里我推荐的是<a href=\"https://github.com/nathco/Office-Code-Pro\" target=\"_blank\" rel=\"external\">Office Code pro</a>自行下载。</p>\n<h2 id=\"Package-Install\"><a href=\"#Package-Install\" class=\"headerlink\" title=\"Package Install\"></a>Package Install</h2><p>在国内安装sublime的插件经常会出现安装的情况，这个情况很正常，我们不需要做任何处理，在不同的时间多去尝试几次就可以了。安装插件我们需要先安装<code>Package Control</code>，这个安装教程网上很多，我这里也就不多解释了，直接贴代码。</p>\n<p>sublime2与sublime3的安装有区别，我们根据自己的版本执行对应的命令即可。</p>\n<p>从菜单 View - Show Console 或者 ctrl + ~ 快捷键，调出 console。将以下 Python 代码粘贴进去并 enter 执行，不出意外即完成安装。以下提供 ST3 和 ST2 的安装代码：</p>\n<h3 id=\"Sublime2\"><a href=\"#Sublime2\" class=\"headerlink\" title=\"Sublime2\"></a>Sublime2</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib2,os; pf=<span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(ipp) <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write( urllib2.urlopen( <span class=\"string\">'http://sublime.wbond.net/'</span> +pf.replace( <span class=\"string\">' '</span>,<span class=\"string\">'%20'</span> )).read()); print( <span class=\"string\">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"Sublime3\"><a href=\"#Sublime3\" class=\"headerlink\" title=\"Sublime3\"></a>Sublime3</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request,os; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), <span class=\"string\">'wb'</span>).write(urllib.request.urlopen( <span class=\"string\">'http://sublime.wbond.net/'</span> + pf.replace(<span class=\"string\">' '</span>,<span class=\"string\">'%20'</span>)).read())</div></pre></td></tr></table></figure>\n<p>重启Sublime Text</p>\n<p>快捷键 Ctrl+Shift+P（菜单 – Tools – Command Paletter），输入 install 选中Install Package并回车，输入或选择你需要的插件回车就安装了（注意左下角的小文字变化，会提示安装成功）。</p>\n<h2 id=\"Package-List\"><a href=\"#Package-List\" class=\"headerlink\" title=\"Package List\"></a>Package List</h2><p><a href=\"https://packagecontrol.io/\" target=\"_blank\" rel=\"external\">官方插件列表</a></p>\n<ul>\n<li>All Autocomplete (补全可以跨文件补全)</li>\n<li>AutoFileName(自动补全文件名)</li>\n<li>ayu(一个很漂亮的配色主题)</li>\n<li>BracketHighlighter(可以高亮代码块)</li>\n<li>Color Highlighter (可以将代码中的所有变量高亮)</li>\n<li>Colorcoder (可以高亮代码中的颜色)</li>\n<li>CSScomb(css排序)</li>\n<li>DocBlockr(js注释文档) </li>\n<li>Emmet(htmlcss代码补全)</li>\n<li>File History(本地文件会生成版本，可以回滚代码)</li>\n<li>Git(git的所有功能)</li>\n<li>Gitignore(可以自动创建一些常用的git过滤文件)</li>\n<li>HTML-CSS-JS Prettify(htmlcssjs的代码格式化)</li>\n<li>JavaScript Completions(原生js的代码补全)</li>\n<li>JavaScriptNext - ES6 Syntax (ES6代码语法高亮)</li>\n<li>Nodejs(nodejs代码补全)</li>\n<li>SublimeCodeIntel(很强打的一个提示跳转工具)</li>\n<li>SVN(svn)</li>\n<li>Terminality(翻译工具)</li>\n<li>SublimeLinter(语法检测工具)</li>\n<li>SublimeLinter-csslint(css语法检测)</li>\n<li>SublimeLinter-jscs(js语法检测)</li>\n</ul>\n<p>以上插件都是一些基本插件，你可以根据自己的工作需要继续添加你所需要的插件。</p>\n","site":{"data":{}},"excerpt":"<p>说一下我们常用的Sublime编辑器的基本配置，和一些常用的插件。</p>\n<p>不废话，先上我们的基本配置文件内容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"bold_folder_labels\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_bottom\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_top\"</span>: <span class=\"number\">2</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_extra_width\"</span>: <span class=\"number\">3</span>,</div><div class=\"line\">\t<span class=\"attr\">\"caret_style\"</span>: <span class=\"string\">\"phase\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"debug\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"fade_fold_buttons\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">\"font_face\"</span>: <span class=\"string\">\"Office Code pro\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"font_size\"</span>: <span class=\"number\">26</span>,</div><div class=\"line\">\t<span class=\"attr\">\"highlight_line\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"highlight_modified_tabs\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"ignored_packages\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"Vintage\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"indent_guide_options\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"draw_normal\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"draw_active\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"jslint\"</span>:</div><div class=\"line\">\t[</div><div class=\"line\">\t\t<span class=\"string\">\"nodejs\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"~/.config/sublime-text-2/Packages/JSLint/linter.js\"</span></div><div class=\"line\">\t],</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_bottom\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"attr\">\"line_padding_top\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"attr\">\"margin\"</span>: <span class=\"number\">4</span>,</div><div class=\"line\">\t<span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"ayu-dark2.sublime-theme\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"update_check\"</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">\t<span class=\"attr\">\"wide_caret\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_separators\"</span>: <span class=\"string\">\"./\\\\()\\\"':,.;&lt;&gt;~!@#$%^&amp;*|+=[]&#123;&#125;`~?\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"word_wrap\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<p>配置里面没有写配色，这个根据自己的喜好自行设置，字体也需要自己去配置，这里我推荐的是<a href=\"https://github.com/nathco/Office-Code-Pro\">Office Code pro</a>自行下载。</p>\n<h2 id=\"Package-Install\"><a href=\"#Package-Install\" class=\"headerlink\" title=\"Package Install\"></a>Package Install</h2><p>在国内安装sublime的插件经常会出现安装的情况，这个情况很正常，我们不需要做任何处理，在不同的时间多去尝试几次就可以了。安装插件我们需要先安装<code>Package Control</code>，这个安装教程网上很多，我这里也就不多解释了，直接贴代码。</p>\n<p>sublime2与sublime3的安装有区别，我们根据自己的版本执行对应的命令即可。</p>\n<p>从菜单 View - Show Console 或者 ctrl + ~ 快捷键，调出 console。将以下 Python 代码粘贴进去并 enter 执行，不出意外即完成安装。以下提供 ST3 和 ST2 的安装代码：</p>\n<h3 id=\"Sublime2\"><a href=\"#Sublime2\" class=\"headerlink\" title=\"Sublime2\"></a>Sublime2</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib2,os; pf=<span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(ipp) <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write( urllib2.urlopen( <span class=\"string\">'http://sublime.wbond.net/'</span> +pf.replace( <span class=\"string\">' '</span>,<span class=\"string\">'%20'</span> )).read()); print( <span class=\"string\">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"Sublime3\"><a href=\"#Sublime3\" class=\"headerlink\" title=\"Sublime3\"></a>Sublime3</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request,os; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), <span class=\"string\">'wb'</span>).write(urllib.request.urlopen( <span class=\"string\">'http://sublime.wbond.net/'</span> + pf.replace(<span class=\"string\">' '</span>,<span class=\"string\">'%20'</span>)).read())</div></pre></td></tr></table></figure>\n<p>重启Sublime Text</p>\n<p>快捷键 Ctrl+Shift+P（菜单 – Tools – Command Paletter），输入 install 选中Install Package并回车，输入或选择你需要的插件回车就安装了（注意左下角的小文字变化，会提示安装成功）。</p>\n<h2 id=\"Package-List\"><a href=\"#Package-List\" class=\"headerlink\" title=\"Package List\"></a>Package List</h2><p><a href=\"https://packagecontrol.io/\">官方插件列表</a></p>\n<ul>\n<li>All Autocomplete (补全可以跨文件补全)</li>\n<li>AutoFileName(自动补全文件名)</li>\n<li>ayu(一个很漂亮的配色主题)</li>\n<li>BracketHighlighter(可以高亮代码块)</li>\n<li>Color Highlighter (可以将代码中的所有变量高亮)</li>\n<li>Colorcoder (可以高亮代码中的颜色)</li>\n<li>CSScomb(css排序)</li>\n<li>DocBlockr(js注释文档) </li>\n<li>Emmet(htmlcss代码补全)</li>\n<li>File History(本地文件会生成版本，可以回滚代码)</li>\n<li>Git(git的所有功能)</li>\n<li>Gitignore(可以自动创建一些常用的git过滤文件)</li>\n<li>HTML-CSS-JS Prettify(htmlcssjs的代码格式化)</li>\n<li>JavaScript Completions(原生js的代码补全)</li>\n<li>JavaScriptNext - ES6 Syntax (ES6代码语法高亮)</li>\n<li>Nodejs(nodejs代码补全)</li>\n<li>SublimeCodeIntel(很强打的一个提示跳转工具)</li>\n<li>SVN(svn)</li>\n<li>Terminality(翻译工具)</li>\n<li>SublimeLinter(语法检测工具)</li>\n<li>SublimeLinter-csslint(css语法检测)</li>\n<li>SublimeLinter-jscs(js语法检测)</li>\n</ul>\n<p>以上插件都是一些基本插件，你可以根据自己的工作需要继续添加你所需要的插件。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj21t2jse0001zdmcbbdlwaqa","tag_id":"cj21t2jso0004zdmcrykwihew","_id":"cj21t2jt10008zdmc5qlpnyge"},{"post_id":"cj21t2jt10009zdmc6a46t56n","tag_id":"cj21t2jt2000azdmcrud3k409","_id":"cj21t2jt2000bzdmcbagcg2i5"}],"Tag":[{"name":"vim emacs atom spacemacs","_id":"cj21t2jso0004zdmcrykwihew"},{"name":"sublime package config","_id":"cj21t2jt2000azdmcrud3k409"}]}}